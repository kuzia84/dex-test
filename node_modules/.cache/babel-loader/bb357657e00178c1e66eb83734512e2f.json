{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\Components\\\\SelectTeams\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { fetchTeamsAsync, selectTeamsData, selectTeamsIsLoading } from \"../../store/getTeamsSlice\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport s from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectTeams = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchTeamsAsync(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams\"));\n  }, [dispatch]);\n  const teamsRedux = useAppSelector(selectTeamsData);\n  const teamsIsLoading = useAppSelector(selectTeamsIsLoading);\n  const teams = teamsRedux.data;\n  let teamSelectOptions = [];\n\n  const customTheme = theme => {\n    return { ...theme,\n      colors: { ...theme.colors,\n        primary25: \"#FF768E\",\n        primary: \"#C60E2E\"\n      },\n      multiValue: (styles, {\n        data\n      }) => {\n        const color = chroma(data.color);\n        return { ...styles,\n          backgroundColor: color.alpha(0.1).css()\n        };\n      },\n      multiValueLabel: (styles, {\n        data\n      }) => ({ ...styles,\n        color: data.color\n      }),\n      multiValueRemove: (styles, {\n        data\n      }) => ({ ...styles,\n        color: data.color,\n        \":hover\": {\n          backgroundColor: data.color,\n          color: \"white\"\n        }\n      })\n    };\n  };\n\n  const animatedComponents = makeAnimated();\n\n  if (teamsIsLoading === false) {\n    teamSelectOptions = teams.map(item => ({\n      value: item.id,\n      label: item.name\n    }));\n  }\n\n  console.log(\"teamSelectOptions: \", teamSelectOptions);\n  return /*#__PURE__*/_jsxDEV(Select, {\n    closeMenuOnSelect: false,\n    components: animatedComponents,\n    isMulti: true,\n    className: s.reactSelectContainer,\n    classNamePrefix: \"select-teams\",\n    theme: customTheme,\n    options: teamSelectOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectTeams, \"s6j3rPsxNLXLbVgl5X9+uj5Ni3I=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = SelectTeams;\nexport default SelectTeams;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectTeams\");","map":{"version":3,"sources":["D:/study/dex-test/src/Components/SelectTeams/index.tsx"],"names":["React","useEffect","useAppDispatch","useAppSelector","fetchTeamsAsync","selectTeamsData","selectTeamsIsLoading","Select","makeAnimated","s","SelectTeams","dispatch","teamsRedux","teamsIsLoading","teams","data","teamSelectOptions","customTheme","theme","colors","primary25","primary","multiValue","styles","color","chroma","backgroundColor","alpha","css","multiValueLabel","multiValueRemove","animatedComponents","map","item","value","id","label","name","console","log","reactSelectContainer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,mBAA/C;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,oBAHF,QAIO,2BAJP;AAMA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAOC,CAAP,MAAc,oBAAd;;;AAEA,MAAMC,WAAqB,GAAG,MAAM;AAAA;;AAClC,QAAMC,QAAQ,GAAGT,cAAc,EAA/B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACP,eAAe,CAAC,gDAAD,CAAhB,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;AAGA,QAAMC,UAAU,GAAGT,cAAc,CAACE,eAAD,CAAjC;AACA,QAAMQ,cAAc,GAAGV,cAAc,CAACG,oBAAD,CAArC;AACA,QAAMQ,KAAK,GAAGF,UAAU,CAACG,IAAzB;AACA,MAAIC,iBAAwB,GAAG,EAA/B;;AACA,QAAMC,WAAW,GAAIC,KAAD,IAAgB;AAClC,WAAO,EACL,GAAGA,KADE;AAELC,MAAAA,MAAM,EAAE,EACN,GAAGD,KAAK,CAACC,MADH;AAENC,QAAAA,SAAS,EAAE,SAFL;AAGNC,QAAAA,OAAO,EAAE;AAHH,OAFH;AAOLC,MAAAA,UAAU,EAAE,CAACC,MAAD,EAAS;AAAER,QAAAA;AAAF,OAAT,KAAsB;AAChC,cAAMS,KAAK,GAAGC,MAAM,CAACV,IAAI,CAACS,KAAN,CAApB;AACA,eAAO,EACL,GAAGD,MADE;AAELG,UAAAA,eAAe,EAAEF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiBC,GAAjB;AAFZ,SAAP;AAID,OAbI;AAcLC,MAAAA,eAAe,EAAE,CAACN,MAAD,EAAS;AAAER,QAAAA;AAAF,OAAT,MAAuB,EACtC,GAAGQ,MADmC;AAEtCC,QAAAA,KAAK,EAAET,IAAI,CAACS;AAF0B,OAAvB,CAdZ;AAkBLM,MAAAA,gBAAgB,EAAE,CAACP,MAAD,EAAS;AAAER,QAAAA;AAAF,OAAT,MAAuB,EACvC,GAAGQ,MADoC;AAEvCC,QAAAA,KAAK,EAAET,IAAI,CAACS,KAF2B;AAGvC,kBAAU;AACRE,UAAAA,eAAe,EAAEX,IAAI,CAACS,KADd;AAERA,UAAAA,KAAK,EAAE;AAFC;AAH6B,OAAvB;AAlBb,KAAP;AA2BD,GA5BD;;AA6BA,QAAMO,kBAAkB,GAAGvB,YAAY,EAAvC;;AACA,MAAIK,cAAc,KAAK,KAAvB,EAA8B;AAC5BG,IAAAA,iBAAiB,GAAGF,KAAK,CAACkB,GAAN,CAAWC,IAAD,KAAW;AACvCC,MAAAA,KAAK,EAAED,IAAI,CAACE,EAD2B;AAEvCC,MAAAA,KAAK,EAAEH,IAAI,CAACI;AAF2B,KAAX,CAAV,CAApB;AAID;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCvB,iBAAnC;AACA,sBACE,QAAC,MAAD;AACE,IAAA,iBAAiB,EAAE,KADrB;AAEE,IAAA,UAAU,EAAEe,kBAFd;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,SAAS,EAAEtB,CAAC,CAAC+B,oBAJf;AAKE,IAAA,eAAe,EAAC,cALlB;AAME,IAAA,KAAK,EAAEvB,WANT;AAOE,IAAA,OAAO,EAAED;AAPX;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzDD;;GAAMN,W;UACaR,c,EAIEC,c,EACIA,c;;;KANnBO,W;AA2DN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport {\r\n  fetchTeamsAsync,\r\n  selectTeamsData,\r\n  selectTeamsIsLoading,\r\n} from \"../../store/getTeamsSlice\";\r\n\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\nimport s from \"./style.module.css\";\r\n\r\nconst SelectTeams: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchTeamsAsync(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams\"));\r\n  }, [dispatch]);\r\n  const teamsRedux = useAppSelector(selectTeamsData);\r\n  const teamsIsLoading = useAppSelector(selectTeamsIsLoading);\r\n  const teams = teamsRedux.data;\r\n  let teamSelectOptions: any[] = [];\r\n  const customTheme = (theme: any) => {\r\n    return {\r\n      ...theme,\r\n      colors: {\r\n        ...theme.colors,\r\n        primary25: \"#FF768E\",\r\n        primary: \"#C60E2E\",\r\n      },\r\n      multiValue: (styles, { data }) => {\r\n        const color = chroma(data.color);\r\n        return {\r\n          ...styles,\r\n          backgroundColor: color.alpha(0.1).css(),\r\n        };\r\n      },\r\n      multiValueLabel: (styles, { data }) => ({\r\n        ...styles,\r\n        color: data.color,\r\n      }),\r\n      multiValueRemove: (styles, { data }) => ({\r\n        ...styles,\r\n        color: data.color,\r\n        \":hover\": {\r\n          backgroundColor: data.color,\r\n          color: \"white\",\r\n        },\r\n      }),\r\n    };\r\n  };\r\n  const animatedComponents = makeAnimated();\r\n  if (teamsIsLoading === false) {\r\n    teamSelectOptions = teams.map((item) => ({\r\n      value: item.id,\r\n      label: item.name,\r\n    }));\r\n  }\r\n  console.log(\"teamSelectOptions: \", teamSelectOptions);\r\n  return (\r\n    <Select\r\n      closeMenuOnSelect={false}\r\n      components={animatedComponents}\r\n      isMulti\r\n      className={s.reactSelectContainer}\r\n      classNamePrefix=\"select-teams\"\r\n      theme={customTheme}\r\n      options={teamSelectOptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SelectTeams;\r\n"]},"metadata":{},"sourceType":"module"}