{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\components\\\\addNewPlayer\\\\addNewPlayer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { fetchAddPlayer } from \"../../store/addPlayerSlice\";\nimport { fetchPlayerPositionsAsync, SelectPlayerPositionsData, SelectPlayerPositionsIsLoading } from \"../../store/getPlayerPositionsSlice\";\nimport { SelectSinglePlayerData } from \"../../store/getPlayerSlice\";\nimport { fetchTeamsAsync, selectTeamsData, selectTeamsIsLoading } from \"../../store/getTeamsSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { newSelectedId } from \"../../store/selectedIdSlice\";\nimport { fetchUpdatePlayerById } from \"../../store/updatePlayerById\";\nimport { InputGroup } from \"../inputGroup/iInputGroup\";\nimport { SelectGroup } from \"../selectGroup/selectGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPlayer = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(fetchPlayerPositionsAsync(\"http://dev.trainee.dex-it.ru/api/Player/GetPositions\"));\n    dispatch(fetchTeamsAsync(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams\"));\n  }, [dispatch]);\n  const selectedId = useAppSelector(newSelectedId);\n  const singlePlayer = useAppSelector(SelectSinglePlayerData);\n  const playerPositionIsLoading = useAppSelector(SelectPlayerPositionsIsLoading);\n  const playerPositions = useAppSelector(SelectPlayerPositionsData);\n  let playerPosition = [];\n\n  if (playerPositions.length > 2) {\n    playerPosition = playerPositions.map(item => {\n      return {\n        value: item,\n        label: item\n      };\n    });\n  }\n\n  const teamsRedux = useAppSelector(selectTeamsData);\n  const teamsIsLoading = useAppSelector(selectTeamsIsLoading);\n  const teams = teamsRedux.data.map(item => {\n    return {\n      value: item.id,\n      label: item.name\n    };\n  });\n  const {\n    control,\n    register,\n    handleSubmit,\n    errors,\n    reset,\n    setValue\n  } = useForm();\n\n  const setTeamDataValues = () => {\n    setValue(\"playerName\", singlePlayer.name);\n    setValue(\"playerHeight\", singlePlayer.height);\n    setValue(\"playerWeight\", singlePlayer.weight);\n    setValue(\"playerBirthday\", singlePlayer.birthday);\n    setValue(\"playerNumber\", singlePlayer.number);\n  };\n\n  useEffect(() => {\n    if (selectedId !== 0) {\n      setTeamDataValues();\n    }\n  }, [selectedId]);\n\n  const onSubmit = data => {\n    if (selectedId !== 0) {\n      const updatePlayerData = {\n        name: data.playerName,\n        number: data.playerNumber,\n        position: data.playerPosition.value,\n        team: data.playerTeam.value,\n        birthday: data.playerBirthday,\n        height: data.playerHeight,\n        weight: data.playerWeight,\n        avatarUrl: data.playerPhoto[0].name,\n        id: selectedId\n      };\n      dispatch(fetchUpdatePlayerById(updatePlayerData));\n    } else {\n      const addPlayerData = {\n        name: data.playerName,\n        number: data.playerNumber,\n        position: data.playerPosition.value,\n        team: data.playerTeam.value,\n        birthday: data.playerBirthday,\n        height: data.playerHeight,\n        weight: data.playerWeight,\n        avatarUrl: data.playerPhoto[0].name\n      };\n      dispatch(fetchAddPlayer(addPlayerData));\n    }\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-add\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-image\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          type: \"file\",\n          inputName: \"playerPhoto\",\n          errorText: \"Select player's image\",\n          register: register,\n          required: true,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-info\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          label: \"Name\",\n          inputName: \"playerName\",\n          errorText: \"Enter player name\",\n          register: register,\n          required: true,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), playerPositionIsLoading ? \"Loading\" : /*#__PURE__*/_jsxDEV(SelectGroup, {\n          label: \"Position\",\n          selectName: \"playerPosition\",\n          errorText: \"This field is required\",\n          errors: errors,\n          register: register,\n          options: playerPosition,\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), teamsIsLoading ? \"Loading\" : /*#__PURE__*/_jsxDEV(SelectGroup, {\n          label: \"Team\",\n          selectName: \"playerTeam\",\n          errorText: \"This field is required\",\n          errors: errors,\n          register: register,\n          options: teams,\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              type: \"number\",\n              label: \"Height (cm)\",\n              inputName: \"playerHeight\",\n              errorText: \"Enter player height\",\n              register: register,\n              required: true,\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              type: \"number\",\n              label: \"Weight (kg)\",\n              inputName: \"playerWeight\",\n              errorText: \"Enter player weight\",\n              register: register,\n              required: true,\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              label: \"Birthday\",\n              type: \"date\",\n              inputName: \"playerBirthday\",\n              errorText: \"Enter player birthday\",\n              register: register,\n              required: true,\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              type: \"number\",\n              label: \"Number\",\n              inputName: \"playerNumber\",\n              errorText: \"Enter player number\",\n              register: register,\n              required: true,\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"reset\",\n              value: \"Cancel\",\n              className: \"btn-text\",\n              onClick: () => {\n                history.push(\"/players\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Save\",\n              className: \"btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPlayer, \"jDNMdQba6ZyfhIpB39CaKXyJcwQ=\", false, function () {\n  return [useAppDispatch, useHistory, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useForm];\n});\n\n_c = AddPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlayer\");","map":{"version":3,"sources":["D:/study/dex-test/src/components/addNewPlayer/addNewPlayer.tsx"],"names":["React","useEffect","useForm","useHistory","fetchAddPlayer","fetchPlayerPositionsAsync","SelectPlayerPositionsData","SelectPlayerPositionsIsLoading","SelectSinglePlayerData","fetchTeamsAsync","selectTeamsData","selectTeamsIsLoading","useAppDispatch","useAppSelector","newSelectedId","fetchUpdatePlayerById","InputGroup","SelectGroup","AddPlayer","dispatch","history","selectedId","singlePlayer","playerPositionIsLoading","playerPositions","playerPosition","length","map","item","value","label","teamsRedux","teamsIsLoading","teams","data","id","name","control","register","handleSubmit","errors","reset","setValue","setTeamDataValues","height","weight","birthday","number","onSubmit","updatePlayerData","playerName","playerNumber","position","team","playerTeam","playerBirthday","playerHeight","playerWeight","avatarUrl","playerPhoto","addPlayerData","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAMA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,8BAHF,QAIO,qCAJP;AAKA,SAASC,sBAAT,QAAuC,4BAAvC;AACA,SACEC,eADF,EAEEC,eAFF,EAGEC,oBAHF,QAIO,2BAJP;AAKA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,mBAA/C;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AACvC,QAAMC,QAAQ,GAAGP,cAAc,EAA/B;AACA,QAAMQ,OAAO,GAAGjB,UAAU,EAA1B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CACNd,yBAAyB,CACvB,sDADuB,CADnB,CAAR;AAKAc,IAAAA,QAAQ,CAACV,eAAe,CAAC,gDAAD,CAAhB,CAAR;AACD,GAPQ,EAON,CAACU,QAAD,CAPM,CAAT;AAQA,QAAME,UAAU,GAAGR,cAAc,CAACC,aAAD,CAAjC;AACA,QAAMQ,YAAY,GAAGT,cAAc,CAACL,sBAAD,CAAnC;AACA,QAAMe,uBAAuB,GAAGV,cAAc,CAC5CN,8BAD4C,CAA9C;AAGA,QAAMiB,eAAe,GAAGX,cAAc,CAACP,yBAAD,CAAtC;AACA,MAAImB,cAAmB,GAAG,EAA1B;;AACA,MAAID,eAAe,CAACE,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BD,IAAAA,cAAc,GAAGD,eAAe,CAACG,GAAhB,CAAqBC,IAAD,IAAkB;AACrD,aAAO;AACLC,QAAAA,KAAK,EAAED,IADF;AAELE,QAAAA,KAAK,EAAEF;AAFF,OAAP;AAID,KALgB,CAAjB;AAMD;;AACD,QAAMG,UAAU,GAAGlB,cAAc,CAACH,eAAD,CAAjC;AACA,QAAMsB,cAAc,GAAGnB,cAAc,CAACF,oBAAD,CAArC;AACA,QAAMsB,KAAK,GAAGF,UAAU,CAACG,IAAX,CAAgBP,GAAhB,CAAqBC,IAAD,IAAU;AAC1C,WAAO;AACLC,MAAAA,KAAK,EAAED,IAAI,CAACO,EADP;AAELL,MAAAA,KAAK,EAAEF,IAAI,CAACQ;AAFP,KAAP;AAID,GALa,CAAd;AAOA,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA;AANI,MAOFxC,OAAO,EAPX;;AASA,QAAMyC,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,QAAQ,CAAC,YAAD,EAAepB,YAAY,CAACc,IAA5B,CAAR;AACAM,IAAAA,QAAQ,CAAC,cAAD,EAAiBpB,YAAY,CAACsB,MAA9B,CAAR;AACAF,IAAAA,QAAQ,CAAC,cAAD,EAAiBpB,YAAY,CAACuB,MAA9B,CAAR;AACAH,IAAAA,QAAQ,CAAC,gBAAD,EAAmBpB,YAAY,CAACwB,QAAhC,CAAR;AACAJ,IAAAA,QAAQ,CAAC,cAAD,EAAiBpB,YAAY,CAACyB,MAA9B,CAAR;AACD,GAND;;AAQA9C,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,UAAU,KAAK,CAAnB,EAAsB;AACpBsB,MAAAA,iBAAiB;AAClB;AACF,GAJQ,EAIN,CAACtB,UAAD,CAJM,CAAT;;AAMA,QAAM2B,QAAQ,GAAId,IAAD,IAA0B;AACzC,QAAIb,UAAU,KAAK,CAAnB,EAAsB;AACpB,YAAM4B,gBAA8B,GAAG;AACrCb,QAAAA,IAAI,EAAEF,IAAI,CAACgB,UAD0B;AAErCH,QAAAA,MAAM,EAAEb,IAAI,CAACiB,YAFwB;AAGrCC,QAAAA,QAAQ,EAAElB,IAAI,CAACT,cAAL,CAAoBI,KAHO;AAIrCwB,QAAAA,IAAI,EAAEnB,IAAI,CAACoB,UAAL,CAAgBzB,KAJe;AAKrCiB,QAAAA,QAAQ,EAAEZ,IAAI,CAACqB,cALsB;AAMrCX,QAAAA,MAAM,EAAEV,IAAI,CAACsB,YANwB;AAOrCX,QAAAA,MAAM,EAAEX,IAAI,CAACuB,YAPwB;AAQrCC,QAAAA,SAAS,EAAExB,IAAI,CAACyB,WAAL,CAAiB,CAAjB,EAAoBvB,IARM;AASrCD,QAAAA,EAAE,EAAEd;AATiC,OAAvC;AAWAF,MAAAA,QAAQ,CAACJ,qBAAqB,CAACkC,gBAAD,CAAtB,CAAR;AACD,KAbD,MAaO;AACL,YAAMW,aAA2B,GAAG;AAClCxB,QAAAA,IAAI,EAAEF,IAAI,CAACgB,UADuB;AAElCH,QAAAA,MAAM,EAAEb,IAAI,CAACiB,YAFqB;AAGlCC,QAAAA,QAAQ,EAAElB,IAAI,CAACT,cAAL,CAAoBI,KAHI;AAIlCwB,QAAAA,IAAI,EAAEnB,IAAI,CAACoB,UAAL,CAAgBzB,KAJY;AAKlCiB,QAAAA,QAAQ,EAAEZ,IAAI,CAACqB,cALmB;AAMlCX,QAAAA,MAAM,EAAEV,IAAI,CAACsB,YANqB;AAOlCX,QAAAA,MAAM,EAAEX,IAAI,CAACuB,YAPqB;AAQlCC,QAAAA,SAAS,EAAExB,IAAI,CAACyB,WAAL,CAAiB,CAAjB,EAAoBvB;AARG,OAApC;AAUAjB,MAAAA,QAAQ,CAACf,cAAc,CAACwD,aAAD,CAAf,CAAR;AACD;;AACDnB,IAAAA,KAAK;AACN,GA5BD;;AA8BA,sBACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,QAAQ,EAAEF,YAAY,CAACS,QAAD,CAAjD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,aAFZ;AAGE,UAAA,SAAS,EAAC,uBAHZ;AAIE,UAAA,QAAQ,EAAEV,QAJZ;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,MAAM,EAAEE;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,SAAS,EAAC,YAFZ;AAGE,UAAA,SAAS,EAAC,mBAHZ;AAIE,UAAA,QAAQ,EAAEF,QAJZ;AAKE,UAAA,QAAQ,MALV;AAME,UAAA,MAAM,EAAEE;AANV;AAAA;AAAA;AAAA;AAAA,gBADF,EASGjB,uBAAuB,GACtB,SADsB,gBAGtB,QAAC,WAAD;AACE,UAAA,KAAK,EAAC,UADR;AAEE,UAAA,UAAU,EAAC,gBAFb;AAGE,UAAA,SAAS,EAAC,wBAHZ;AAIE,UAAA,MAAM,EAAEiB,MAJV;AAKE,UAAA,QAAQ,EAAEF,QALZ;AAME,UAAA,OAAO,EAAEb,cANX;AAOE,UAAA,OAAO,EAAEY;AAPX;AAAA;AAAA;AAAA;AAAA,gBAZJ,EAsBGL,cAAc,GACb,SADa,gBAGb,QAAC,WAAD;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,UAAU,EAAC,YAFb;AAGE,UAAA,SAAS,EAAC,wBAHZ;AAIE,UAAA,MAAM,EAAEQ,MAJV;AAKE,UAAA,QAAQ,EAAEF,QALZ;AAME,UAAA,OAAO,EAAEL,KANX;AAOE,UAAA,OAAO,EAAEI;AAPX;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eAmCE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAC,aAFR;AAGE,cAAA,SAAS,EAAC,cAHZ;AAIE,cAAA,SAAS,EAAC,qBAJZ;AAKE,cAAA,QAAQ,EAAEC,QALZ;AAME,cAAA,QAAQ,MANV;AAOE,cAAA,MAAM,EAAEE;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAC,aAFR;AAGE,cAAA,SAAS,EAAC,cAHZ;AAIE,cAAA,SAAS,EAAC,qBAJZ;AAKE,cAAA,QAAQ,EAAEF,QALZ;AAME,cAAA,QAAQ,MANV;AAOE,cAAA,MAAM,EAAEE;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCF,eA2DE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,KAAK,EAAC,UADR;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,SAAS,EAAC,gBAHZ;AAIE,cAAA,SAAS,EAAC,uBAJZ;AAKE,cAAA,QAAQ,EAAEF,QALZ;AAME,cAAA,QAAQ,MANV;AAOE,cAAA,MAAM,EAAEE;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAC,QAFR;AAGE,cAAA,SAAS,EAAC,cAHZ;AAIE,cAAA,SAAS,EAAC,qBAJZ;AAKE,cAAA,QAAQ,EAAEF,QALZ;AAME,cAAA,QAAQ,MANV;AAOE,cAAA,MAAM,EAAEE;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3DF,eAmFE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,KAAK,EAAC,QAFR;AAGE,cAAA,SAAS,EAAC,UAHZ;AAIE,cAAA,OAAO,EAAE,MAAM;AACbpB,gBAAAA,OAAO,CAACyC,IAAR,CAAa,UAAb;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAO,cAAA,IAAI,EAAC,QAAZ;AAAqB,cAAA,KAAK,EAAC,MAA3B;AAAkC,cAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqHD,CA7MM;;GAAM3C,S;UACMN,c,EACDT,U,EASGU,c,EACEA,c,EACWA,c,EAGRA,c,EAULA,c,EACIA,c,EAenBX,O;;;KA1COgB,S","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  IPlayerAddData,\r\n  IPlayerAddInputs,\r\n  NewPlayerDto,\r\n} from \"../../interfaces/interfaces\";\r\nimport { fetchAddPlayer } from \"../../store/addPlayerSlice\";\r\nimport {\r\n  fetchPlayerPositionsAsync,\r\n  SelectPlayerPositionsData,\r\n  SelectPlayerPositionsIsLoading,\r\n} from \"../../store/getPlayerPositionsSlice\";\r\nimport { SelectSinglePlayerData } from \"../../store/getPlayerSlice\";\r\nimport {\r\n  fetchTeamsAsync,\r\n  selectTeamsData,\r\n  selectTeamsIsLoading,\r\n} from \"../../store/getTeamsSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport { newSelectedId } from \"../../store/selectedIdSlice\";\r\nimport { fetchUpdatePlayerById } from \"../../store/updatePlayerById\";\r\nimport { InputGroup } from \"../inputGroup/iInputGroup\";\r\nimport { SelectGroup } from \"../selectGroup/selectGroup\";\r\n\r\nexport const AddPlayer: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(\r\n      fetchPlayerPositionsAsync(\r\n        \"http://dev.trainee.dex-it.ru/api/Player/GetPositions\"\r\n      )\r\n    );\r\n    dispatch(fetchTeamsAsync(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams\"));\r\n  }, [dispatch]);\r\n  const selectedId = useAppSelector(newSelectedId);\r\n  const singlePlayer = useAppSelector(SelectSinglePlayerData);\r\n  const playerPositionIsLoading = useAppSelector(\r\n    SelectPlayerPositionsIsLoading\r\n  );\r\n  const playerPositions = useAppSelector(SelectPlayerPositionsData);\r\n  let playerPosition: any = [];\r\n  if (playerPositions.length > 2) {\r\n    playerPosition = playerPositions.map((item: string) => {\r\n      return {\r\n        value: item,\r\n        label: item,\r\n      };\r\n    });\r\n  }\r\n  const teamsRedux = useAppSelector(selectTeamsData);\r\n  const teamsIsLoading = useAppSelector(selectTeamsIsLoading);\r\n  const teams = teamsRedux.data.map((item) => {\r\n    return {\r\n      value: item.id,\r\n      label: item.name,\r\n    };\r\n  });\r\n\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    reset,\r\n    setValue,\r\n  } = useForm<IPlayerAddInputs>();\r\n\r\n  const setTeamDataValues = () => {\r\n    setValue(\"playerName\", singlePlayer.name);\r\n    setValue(\"playerHeight\", singlePlayer.height);\r\n    setValue(\"playerWeight\", singlePlayer.weight);\r\n    setValue(\"playerBirthday\", singlePlayer.birthday);\r\n    setValue(\"playerNumber\", singlePlayer.number);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedId !== 0) {\r\n      setTeamDataValues();\r\n    }\r\n  }, [selectedId]);\r\n\r\n  const onSubmit = (data: IPlayerAddData) => {\r\n    if (selectedId !== 0) {\r\n      const updatePlayerData: NewPlayerDto = {\r\n        name: data.playerName,\r\n        number: data.playerNumber,\r\n        position: data.playerPosition.value,\r\n        team: data.playerTeam.value,\r\n        birthday: data.playerBirthday,\r\n        height: data.playerHeight,\r\n        weight: data.playerWeight,\r\n        avatarUrl: data.playerPhoto[0].name,\r\n        id: selectedId,\r\n      };\r\n      dispatch(fetchUpdatePlayerById(updatePlayerData));\r\n    } else {\r\n      const addPlayerData: NewPlayerDto = {\r\n        name: data.playerName,\r\n        number: data.playerNumber,\r\n        position: data.playerPosition.value,\r\n        team: data.playerTeam.value,\r\n        birthday: data.playerBirthday,\r\n        height: data.playerHeight,\r\n        weight: data.playerWeight,\r\n        avatarUrl: data.playerPhoto[0].name,\r\n      };\r\n      dispatch(fetchAddPlayer(addPlayerData));\r\n    }\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className=\"form-add\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-col\">\r\n        <div className=\"form-image\">\r\n          <InputGroup\r\n            type=\"file\"\r\n            inputName=\"playerPhoto\"\r\n            errorText=\"Select player's image\"\r\n            register={register}\r\n            required\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-col\">\r\n        <div className=\"form-info\">\r\n          <InputGroup\r\n            label=\"Name\"\r\n            inputName=\"playerName\"\r\n            errorText=\"Enter player name\"\r\n            register={register}\r\n            required\r\n            errors={errors}\r\n          />\r\n          {playerPositionIsLoading ? (\r\n            \"Loading\"\r\n          ) : (\r\n            <SelectGroup\r\n              label=\"Position\"\r\n              selectName=\"playerPosition\"\r\n              errorText=\"This field is required\"\r\n              errors={errors}\r\n              register={register}\r\n              options={playerPosition}\r\n              control={control}\r\n            />\r\n          )}\r\n          {teamsIsLoading ? (\r\n            \"Loading\"\r\n          ) : (\r\n            <SelectGroup\r\n              label=\"Team\"\r\n              selectName=\"playerTeam\"\r\n              errorText=\"This field is required\"\r\n              errors={errors}\r\n              register={register}\r\n              options={teams}\r\n              control={control}\r\n            />\r\n          )}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-col\">\r\n              <InputGroup\r\n                type=\"number\"\r\n                label=\"Height (cm)\"\r\n                inputName=\"playerHeight\"\r\n                errorText=\"Enter player height\"\r\n                register={register}\r\n                required\r\n                errors={errors}\r\n              />\r\n            </div>\r\n            <div className=\"form-col\">\r\n              <InputGroup\r\n                type=\"number\"\r\n                label=\"Weight (kg)\"\r\n                inputName=\"playerWeight\"\r\n                errorText=\"Enter player weight\"\r\n                register={register}\r\n                required\r\n                errors={errors}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-col\">\r\n              <InputGroup\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                inputName=\"playerBirthday\"\r\n                errorText=\"Enter player birthday\"\r\n                register={register}\r\n                required\r\n                errors={errors}\r\n              />\r\n            </div>\r\n            <div className=\"form-col\">\r\n              <InputGroup\r\n                type=\"number\"\r\n                label=\"Number\"\r\n                inputName=\"playerNumber\"\r\n                errorText=\"Enter player number\"\r\n                register={register}\r\n                required\r\n                errors={errors}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row buttons\">\r\n            <div className=\"form-col\">\r\n              <input\r\n                type=\"reset\"\r\n                value=\"Cancel\"\r\n                className=\"btn-text\"\r\n                onClick={() => {\r\n                  history.push(\"/players\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-col\">\r\n              <input type=\"submit\" value=\"Save\" className=\"btn\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}