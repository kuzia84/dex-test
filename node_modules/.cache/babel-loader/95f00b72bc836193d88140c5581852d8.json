{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\Components\\\\AddNewPlayer\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { fetchPlayerPositions, SelectPlayerPositionsData } from \"../../store/getPlayerPositionsSlice\";\nimport { fetchTeamsAsync } from \"../../store/getTeamsSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPlayer = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const playerPosition = useAppSelector(SelectPlayerPositionsData);\n  useEffect(() => {\n    dispatch(fetchPlayerPositions(\"http://dev.trainee.dex-it.ru/api/Player/GetPositions\"));\n    dispatch(fetchTeamsAsync(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams\"));\n  }, [dispatch]);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playerName\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"playerName\",\n        id: \"playerName\",\n        ref: register({\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), errors.playerName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playerPosition\",\n        children: \"Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"playerPosition\",\n        ref: register({\n          required: true\n        }),\n        children: playerPosition && playerPosition.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), errors.playerName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerHeight\",\n          children: \"Height (cm)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playerHeight\",\n          name: \"playerHeight\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), errors.playerHeight && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerWeight\",\n          children: \"Weight (kg)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playerWeight\",\n          name: \"playerWeight\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), errors.playerWeight && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerHeight\",\n          children: \"Birthday\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playerBirthday\",\n          name: \"playerBirthday\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), errors.playerBirthday && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"playerNumber\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"playerNumber\",\n          name: \"playerNumber\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), errors.playerNumber && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"reset\",\n      value: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Save\",\n      className: \"btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPlayer, \"dwCkjy+dWgK4wwIf6j+o6juyxs4=\", false, function () {\n  return [useAppDispatch, useAppSelector, useForm];\n});\n\n_c = AddPlayer;\nexport default AddPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlayer\");","map":{"version":3,"sources":["D:/study/dex-test/src/Components/AddNewPlayer/index.tsx"],"names":["React","useEffect","useForm","fetchPlayerPositions","SelectPlayerPositionsData","fetchTeamsAsync","useAppDispatch","useAppSelector","AddPlayer","dispatch","playerPosition","register","handleSubmit","errors","onSubmit","data","console","log","required","playerName","map","item","playerHeight","playerWeight","playerBirthday","playerNumber"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  fetchPlayerPositions,\r\n  SelectPlayerPositionsData,\r\n} from \"../../store/getPlayerPositionsSlice\";\r\nimport { fetchTeamsAsync } from \"../../store/getTeamsSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\n\r\ntype Inputs = {\r\n  playerName: string;\r\n  playerPosition: string;\r\n  playerTeam: string;\r\n  playerHeight: string;\r\n  playerWeight: string;\r\n  playerBirthday: string;\r\n  playerNumber: string;\r\n};\r\n\r\nconst AddPlayer: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const playerPosition = useAppSelector(SelectPlayerPositionsData);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      fetchPlayerPositions(\r\n        \"http://dev.trainee.dex-it.ru/api/Player/GetPositions\"\r\n      )\r\n    );\r\n    dispatch(fetchTeamsAsync(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams\"));\r\n  }, [dispatch]);\r\n\r\n  const { register, handleSubmit, errors } = useForm<Inputs>();\r\n  const onSubmit = (data: {}) => console.log(data);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-row\">\r\n        <label htmlFor=\"playerName\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"playerName\"\r\n          id=\"playerName\"\r\n          ref={register({ required: true })}\r\n        />\r\n        {errors.playerName && (\r\n          <div className=\"error\">This field is required</div>\r\n        )}\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <label htmlFor=\"playerPosition\">Position</label>\r\n        <select name=\"playerPosition\" ref={register({ required: true })}>\r\n          {playerPosition &&\r\n            playerPosition.map((item) => <option value={item}>{item}</option>)}\r\n        </select>\r\n        {errors.playerName && (\r\n          <div className=\"error\">This field is required</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"form-row\">\r\n        <div className=\"form-col\">\r\n          <label htmlFor=\"playerHeight\">Height (cm)</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"playerHeight\"\r\n            name=\"playerHeight\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.playerHeight && (\r\n            <div className=\"error\">This field is required</div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-col\">\r\n          <label htmlFor=\"playerWeight\">Weight (kg)</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"playerWeight\"\r\n            name=\"playerWeight\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.playerWeight && (\r\n            <div className=\"error\">This field is required</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-col\">\r\n          <label htmlFor=\"playerHeight\">Birthday</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"playerBirthday\"\r\n            name=\"playerBirthday\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.playerBirthday && (\r\n            <div className=\"error\">This field is required</div>\r\n          )}\r\n        </div>\r\n        <div className=\"form-col\">\r\n          <label htmlFor=\"playerNumber\">Number</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"playerNumber\"\r\n            name=\"playerNumber\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.playerNumber && (\r\n            <div className=\"error\">This field is required</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <input type=\"reset\" value=\"Cancel\" />\r\n      <input type=\"submit\" value=\"Save\" className=\"btn\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPlayer;\r\n"]},"metadata":{},"sourceType":"module"}