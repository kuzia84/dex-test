{"ast":null,"code":"import _defineProperty from\"D:/study/dex-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"D:/study/dex-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import s from\"./style.module.css\";import cn from\"classnames\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var InputGroup=function InputGroup(_ref){var label=_ref.label,_ref$type=_ref.type,type=_ref$type===void 0?\"text\":_ref$type,inputName=_ref.inputName,errorText=_ref.errorText,register=_ref.register,required=_ref.required,errors=_ref.errors;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPwd=_useState2[0],setShowPwd=_useState2[1];var _useState3=useState(type),_useState4=_slicedToArray(_useState3,2),inputType=_useState4[0],setInputType=_useState4[1];var handleClick=function handleClick(event){event.preventDefault();setShowPwd(function(prevState){return!prevState;});if(inputType===\"password\"){setInputType(\"text\");}if(inputType===\"text\"){setInputType(\"password\");}};return/*#__PURE__*/_jsxs(\"div\",{className:cn(s.inputGroup,_defineProperty({},s.showPwd,showPwd)),children:[type===\"file\"?/*#__PURE__*/_jsx(\"label\",{className:s.fileLabel,htmlFor:inputName}):/*#__PURE__*/_jsx(\"label\",{className:s.label,htmlFor:inputName,children:label}),/*#__PURE__*/_jsx(\"input\",{className:s.input,type:inputType,name:inputName,id:inputName,ref:register({required:required})}),inputName===\"checkPassword\"?/*#__PURE__*/_jsx(\"button\",{className:s.showPassword,onClick:handleClick}):inputName===\"password\"?/*#__PURE__*/_jsx(\"button\",{className:s.showPassword,onClick:handleClick}):\"\",errors[inputName]&&/*#__PURE__*/_jsx(\"div\",{className:s.error,children:errorText})]});};","map":{"version":3,"sources":["D:/study/dex-test/src/Components/InputGroup/iInputGroup.tsx"],"names":["useState","s","cn","InputGroup","label","type","inputName","errorText","register","required","errors","showPwd","setShowPwd","inputType","setInputType","handleClick","event","preventDefault","prevState","inputGroup","fileLabel","input","showPassword","error"],"mappings":"kRAAA,OAASA,QAAT,KAAyB,OAAzB,CAGA,MAAOC,CAAAA,CAAP,KAAc,oBAAd,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,C,wFAEA,MAAO,IAAMC,CAAAA,UAAgC,CAAG,QAAnCA,CAAAA,UAAmC,MAQ1C,IAPJC,CAAAA,KAOI,MAPJA,KAOI,gBANJC,IAMI,CANJA,IAMI,oBANG,MAMH,WALJC,SAKI,MALJA,SAKI,CAJJC,SAII,MAJJA,SAII,CAHJC,QAGI,MAHJA,QAGI,CAFJC,QAEI,MAFJA,QAEI,CADJC,MACI,MADJA,MACI,eAC0BV,QAAQ,CAAU,KAAV,CADlC,wCACGW,OADH,eACYC,UADZ,8BAE8BZ,QAAQ,CAASK,IAAT,CAFtC,yCAEGQ,SAFH,eAEcC,YAFd,eAGJ,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAgB,CAClCA,KAAK,CAACC,cAAN,GACAL,UAAU,CAAC,SAACM,SAAD,QAAe,CAACA,SAAhB,EAAD,CAAV,CACA,GAAIL,SAAS,GAAK,UAAlB,CAA8B,CAC5BC,YAAY,CAAC,MAAD,CAAZ,CACD,CACD,GAAID,SAAS,GAAK,MAAlB,CAA0B,CACxBC,YAAY,CAAC,UAAD,CAAZ,CACD,CACF,CATD,CAUA,mBACE,aAAK,SAAS,CAAEZ,EAAE,CAACD,CAAC,CAACkB,UAAH,oBAAkBlB,CAAC,CAACU,OAApB,CAA8BA,OAA9B,EAAlB,WACGN,IAAI,GAAK,MAAT,cACC,cAAO,SAAS,CAAEJ,CAAC,CAACmB,SAApB,CAA+B,OAAO,CAAEd,SAAxC,EADD,cAGC,cAAO,SAAS,CAAEL,CAAC,CAACG,KAApB,CAA2B,OAAO,CAAEE,SAApC,UACGF,KADH,EAJJ,cAQE,cACE,SAAS,CAAEH,CAAC,CAACoB,KADf,CAEE,IAAI,CAAER,SAFR,CAGE,IAAI,CAAEP,SAHR,CAIE,EAAE,CAAEA,SAJN,CAKE,GAAG,CAAEE,QAAQ,CAAC,CAAEC,QAAQ,CAARA,QAAF,CAAD,CALf,EARF,CAeGH,SAAS,GAAK,eAAd,cACC,eAAQ,SAAS,CAAEL,CAAC,CAACqB,YAArB,CAAmC,OAAO,CAAEP,WAA5C,EADD,CAEGT,SAAS,GAAK,UAAd,cACF,eAAQ,SAAS,CAAEL,CAAC,CAACqB,YAArB,CAAmC,OAAO,CAAEP,WAA5C,EADE,CAGF,EApBJ,CAsBGL,MAAM,CAACJ,SAAD,CAAN,eAAqB,YAAK,SAAS,CAAEL,CAAC,CAACsB,KAAlB,UAA0BhB,SAA1B,EAtBxB,GADF,CA0BD,CA/CM","sourcesContent":["import { useState } from \"react\";\r\nimport { InputProps } from \"../../Interfaces/interfaces\";\r\n\r\nimport s from \"./style.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nexport const InputGroup: React.FC<InputProps> = ({\r\n  label,\r\n  type = \"text\",\r\n  inputName,\r\n  errorText,\r\n  register,\r\n  required,\r\n  errors,\r\n}) => {\r\n  const [showPwd, setShowPwd] = useState<boolean>(false);\r\n  const [inputType, setInputType] = useState<string>(type);\r\n  const handleClick = (event: any) => {\r\n    event.preventDefault();\r\n    setShowPwd((prevState) => !prevState);\r\n    if (inputType === \"password\") {\r\n      setInputType(\"text\");\r\n    }\r\n    if (inputType === \"text\") {\r\n      setInputType(\"password\");\r\n    }\r\n  };\r\n  return (\r\n    <div className={cn(s.inputGroup, { [s.showPwd]: showPwd })}>\r\n      {type === \"file\" ? (\r\n        <label className={s.fileLabel} htmlFor={inputName}></label>\r\n      ) : (\r\n        <label className={s.label} htmlFor={inputName}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <input\r\n        className={s.input}\r\n        type={inputType}\r\n        name={inputName}\r\n        id={inputName}\r\n        ref={register({ required })}\r\n      />\r\n      {inputName === \"checkPassword\" ? (\r\n        <button className={s.showPassword} onClick={handleClick}></button>\r\n      ) : inputName === \"password\" ? (\r\n        <button className={s.showPassword} onClick={handleClick}></button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {errors[inputName] && <div className={s.error}>{errorText}</div>}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}