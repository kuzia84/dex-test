{"ast":null,"code":"import _regeneratorRuntime from\"D:/study/dex-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/study/dex-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";var initialState={isLoading:true,fetchResult:[],error:null};export var fetchPlayerPositionsAsync=createAsyncThunk(\"player/fetchPlayerPosition\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(request){var myHeaders,requestOptions,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:myHeaders=new Headers({\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))});requestOptions={method:\"GET\",headers:myHeaders};_context.next=4;return fetch(request,requestOptions);case 4:response=_context.sent;_context.next=7;return response.json();case 7:return _context.abrupt(\"return\",_context.sent);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());var getPlayerPositionsSlice=createSlice({name:\"getPlayerPositions\",initialState:initialState,reducers:{reset:function reset(state){return initialState;}},extraReducers:function extraReducers(builder){builder.addCase(fetchPlayerPositionsAsync.pending,function(state){state.isLoading=true;});builder.addCase(fetchPlayerPositionsAsync.fulfilled,function(state,action){state.isLoading=false;state.fetchResult=action.payload;});builder.addCase(fetchPlayerPositionsAsync.rejected,function(state,action){state.isLoading=false;state.error=action.error;});}});export var SelectPlayerPositionsData=function SelectPlayerPositionsData(state){return state.getPlayerPositions.fetchResult;};export var SelectPlayerPositionsIsLoading=function SelectPlayerPositionsIsLoading(state){return state.getPlayerPositions.isLoading;};export var SelectPlayerPositionsError=function SelectPlayerPositionsError(state){return state.getPlayerPositions.error;};export var getPlayerPositionsReducer=getPlayerPositionsSlice.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/store/getPlayerPositionsSlice.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","fetchResult","error","fetchPlayerPositionsAsync","request","myHeaders","Headers","Authorization","localStorage","getItem","requestOptions","method","headers","fetch","response","json","getPlayerPositionsSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","SelectPlayerPositionsData","getPlayerPositions","SelectPlayerPositionsIsLoading","SelectPlayerPositionsError","getPlayerPositionsReducer","reducer"],"mappings":"6QAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA8C,kBAA9C,CAIA,GAAMC,CAAAA,YAAkC,CAAG,CACzCC,SAAS,CAAE,IAD8B,CAEzCC,WAAW,CAAE,EAF4B,CAGzCC,KAAK,CAAE,IAHkC,CAA3C,CAMA,MAAO,IAAMC,CAAAA,yBAAyB,CAAGN,gBAAgB,CACvD,4BADuD,0FAEvD,iBAAOO,OAAP,wJACQC,SADR,CACoB,GAAIC,CAAAA,OAAJ,CAAY,CAC5B,eAAgB,kBADY,CAE5BC,aAAa,kBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ,CAFe,CAAZ,CADpB,CAKQC,cALR,CAKyB,CACrBC,MAAM,CAAE,KADa,CAErBC,OAAO,CAAEP,SAFY,CALzB,uBASyBQ,CAAAA,KAAK,CAACT,OAAD,CAAUM,cAAV,CAT9B,QASQI,QATR,qCAUgBA,CAAAA,QAAQ,CAACC,IAAT,EAVhB,6GAFuD,+DAAlD,CAgBP,GAAMC,CAAAA,uBAAuB,CAAGlB,WAAW,CAAC,CAC1CmB,IAAI,CAAE,oBADoC,CAE1ClB,YAAY,CAAZA,YAF0C,CAG1CmB,QAAQ,CAAE,CACRC,KAAK,CAAE,eAACC,KAAD,QAAWrB,CAAAA,YAAX,EADC,CAHgC,CAM1CsB,aAAa,CAAE,uBAACC,OAAD,CAAa,CAC1BA,OAAO,CAACC,OAAR,CAAgBpB,yBAAyB,CAACqB,OAA1C,CAAmD,SAACJ,KAAD,CAAW,CAC5DA,KAAK,CAACpB,SAAN,CAAkB,IAAlB,CACD,CAFD,EAGAsB,OAAO,CAACC,OAAR,CAAgBpB,yBAAyB,CAACsB,SAA1C,CAAqD,SAACL,KAAD,CAAQM,MAAR,CAAmB,CACtEN,KAAK,CAACpB,SAAN,CAAkB,KAAlB,CACAoB,KAAK,CAACnB,WAAN,CAAoByB,MAAM,CAACC,OAA3B,CACD,CAHD,EAIAL,OAAO,CAACC,OAAR,CAAgBpB,yBAAyB,CAACyB,QAA1C,CAAoD,SAACR,KAAD,CAAQM,MAAR,CAAmB,CACrEN,KAAK,CAACpB,SAAN,CAAkB,KAAlB,CACAoB,KAAK,CAAClB,KAAN,CAAcwB,MAAM,CAACxB,KAArB,CACD,CAHD,EAID,CAlByC,CAAD,CAA3C,CAqBA,MAAO,IAAM2B,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACT,KAAD,QACvCA,CAAAA,KAAK,CAACU,kBAAN,CAAyB7B,WADc,EAAlC,CAEP,MAAO,IAAM8B,CAAAA,8BAA8B,CAAG,QAAjCA,CAAAA,8BAAiC,CAACX,KAAD,QAC5CA,CAAAA,KAAK,CAACU,kBAAN,CAAyB9B,SADmB,EAAvC,CAEP,MAAO,IAAMgC,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,CAACZ,KAAD,QACxCA,CAAAA,KAAK,CAACU,kBAAN,CAAyB5B,KADe,EAAnC,CAGP,MAAO,IAAM+B,CAAAA,yBAAyB,CAAGjB,uBAAuB,CAACkB,OAA1D","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { PlayerPositionsState } from \"../Interfaces/interfaces\";\r\nimport { RootState } from \"./store\";\r\n\r\nconst initialState: PlayerPositionsState = {\r\n  isLoading: true,\r\n  fetchResult: [],\r\n  error: null,\r\n};\r\n\r\nexport const fetchPlayerPositionsAsync = createAsyncThunk<any, string>(\r\n  \"player/fetchPlayerPosition\",\r\n  async (request) => {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    });\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n    };\r\n    const response = await fetch(request, requestOptions);\r\n    return (await response.json()) as string[];\r\n  }\r\n);\r\n\r\nconst getPlayerPositionsSlice = createSlice({\r\n  name: \"getPlayerPositions\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPlayerPositionsAsync.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchPlayerPositionsAsync.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchPlayerPositionsAsync.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const SelectPlayerPositionsData = (state: RootState) =>\r\n  state.getPlayerPositions.fetchResult;\r\nexport const SelectPlayerPositionsIsLoading = (state: RootState) =>\r\n  state.getPlayerPositions.isLoading;\r\nexport const SelectPlayerPositionsError = (state: RootState) =>\r\n  state.getPlayerPositions.error;\r\n\r\nexport const getPlayerPositionsReducer = getPlayerPositionsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}