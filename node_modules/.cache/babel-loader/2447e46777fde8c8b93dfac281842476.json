{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { addTeamRequest } from \"../../api/requests/team\";\nexport const fetchAddTeam = createAsyncThunk(\"team/addTeam\", async data => {\n  const myHeaders = new Headers({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  });\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders,\n    body: JSON.stringify(data)\n  };\n  const response = await fetch(addTeamRequest, requestOptions);\n  return await response.json();\n});\nexport const fetchSingleTeamAsync = createAsyncThunk(\"team/fetchTeamData\", async request => {\n  const myHeaders = new Headers({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  });\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders\n  };\n  const response = await fetch(request, requestOptions);\n  return await response.json();\n});\nexport const fetchTeamsAsync = createAsyncThunk(\"teams/fatchTeamsData\", async request => {\n  const myHeaders = new Headers({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  });\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders\n  };\n  const response = await fetch(request, requestOptions);\n  return await response.json();\n});","map":{"version":3,"sources":["D:/study/dex-test/src/modules/team/teamThunk.ts"],"names":["createAsyncThunk","addTeamRequest","fetchAddTeam","data","myHeaders","Headers","Authorization","localStorage","getItem","requestOptions","method","headers","body","JSON","stringify","response","fetch","json","fetchSingleTeamAsync","request","fetchTeamsAsync"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,SAASC,cAAT,QAA+B,yBAA/B;AAEA,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAC1C,cAD0C,EAE1C,MAAOG,IAAP,IAAgB;AACd,QAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,oBAAgB,kBADY;AAE5BC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF3B,GAAZ,CAAlB;AAIA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAEP,SAFY;AAGrBQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AAHe,GAAvB;AAKA,QAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACf,cAAD,EAAiBQ,cAAjB,CAA5B;AACA,SAAO,MAAMM,QAAQ,CAACE,IAAT,EAAb;AACD,CAdyC,CAArC;AAiBP,OAAO,MAAMC,oBAAoB,GAAGlB,gBAAgB,CAClD,oBADkD,EAElD,MAAOmB,OAAP,IAAmB;AACjB,QAAMf,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,oBAAgB,kBADY;AAE5BC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF3B,GAAZ,CAAlB;AAIA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAEP;AAFY,GAAvB;AAIA,QAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACG,OAAD,EAAUV,cAAV,CAA5B;AACA,SAAQ,MAAMM,QAAQ,CAACE,IAAT,EAAd;AACD,CAbiD,CAA7C;AAgBP,OAAO,MAAMG,eAAe,GAAGpB,gBAAgB,CAC7C,sBAD6C,EAE7C,MAAOmB,OAAP,IAAmB;AACjB,QAAMf,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,oBAAgB,kBADY;AAE5BC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF3B,GAAZ,CAAlB;AAIA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAEP;AAFY,GAAvB;AAIA,QAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACG,OAAD,EAAUV,cAAV,CAA5B;AACA,SAAQ,MAAMM,QAAQ,CAACE,IAAT,EAAd;AACD,CAb4C,CAAxC","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { NewTeamDto, TeamDto, TeamDtoPageResult } from \"../../api/dto/team.g\";\r\nimport { addTeamRequest } from \"../../api/requests/team\";\r\n\r\nexport const fetchAddTeam = createAsyncThunk<any, NewTeamDto>(\r\n  \"team/addTeam\",\r\n  async (data) => {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    });\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: JSON.stringify(data),\r\n    };\r\n    const response = await fetch(addTeamRequest, requestOptions);\r\n    return await response.json();\r\n  }\r\n);\r\n\r\nexport const fetchSingleTeamAsync = createAsyncThunk<any, string>(\r\n  \"team/fetchTeamData\",\r\n  async (request) => {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    });\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n    };\r\n    const response = await fetch(request, requestOptions);\r\n    return (await response.json()) as TeamDto;\r\n  }\r\n);\r\n\r\nexport const fetchTeamsAsync = createAsyncThunk<any, string>(\r\n  \"teams/fatchTeamsData\",\r\n  async (request) => {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    });\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n    };\r\n    const response = await fetch(request, requestOptions);\r\n    return (await response.json()) as TeamDtoPageResult;\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}