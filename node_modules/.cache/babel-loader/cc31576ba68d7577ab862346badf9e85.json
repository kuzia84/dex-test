{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: false,\n  fetchResult: {},\n  errors: null\n};\nexport const fetchSignIn = createAsyncThunk(\"app/signIn\", async data => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  };\n  const response = await fetch(\"http://dev.trainee.dex-it.ru/api/Auth/SignIn\", requestOptions);\n  return await response.json();\n});\nconst signInSlice = createSlice({\n  name: \"signIn\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchSignIn.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchSignIn.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.fetchResult = action.payload;\n    });\n    builder.addCase(fetchSignIn.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errors = action.error;\n    });\n  }\n});\nexport const selectSignInResult = state => state.signIn.fetchResult;\nexport const selectSignInIsLoading = state => state.signIn.isLoading;\nexport const selectSignInIsError = state => state.signIn.errors;\nexport const signInReducer = signInSlice.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/store/signInSlise.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","fetchResult","errors","fetchSignIn","data","requestOptions","method","headers","body","JSON","stringify","response","fetch","json","signInSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","selectSignInResult","signIn","selectSignInIsLoading","selectSignInIsError","signInReducer","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAeA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,SAAS,EAAE,KADsB;AAEjCC,EAAAA,WAAW,EAAE,EAFoB;AAGjCC,EAAAA,MAAM,EAAE;AAHyB,CAAnC;AAMA,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CACzC,YADyC,EAEzC,MAAOO,IAAP,IAAgB;AACd,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFY;AAKrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALe,GAAvB;AAOA,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8CAD0B,EAE1BP,cAF0B,CAA5B;AAIA,SAAO,MAAMM,QAAQ,CAACE,IAAT,EAAb;AACD,CAfwC,CAApC;AAkBP,MAAMC,WAAW,GAAGhB,WAAW,CAAC;AAC9BiB,EAAAA,IAAI,EAAE,QADwB;AAE9BhB,EAAAA,YAF8B;AAG9BiB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWnB;AADV,GAHoB;AAM9BoB,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBlB,WAAW,CAACmB,OAA5B,EAAsCJ,KAAD,IAAW;AAC9CA,MAAAA,KAAK,CAAClB,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAoB,IAAAA,OAAO,CAACC,OAAR,CAAgBlB,WAAW,CAACoB,SAA5B,EAAuC,CAACL,KAAD,EAAQM,MAAR,KAAmB;AACxDN,MAAAA,KAAK,CAAClB,SAAN,GAAkB,KAAlB;AACAkB,MAAAA,KAAK,CAACjB,WAAN,GAAoBuB,MAAM,CAACC,OAA3B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBlB,WAAW,CAACuB,QAA5B,EAAsC,CAACR,KAAD,EAAQM,MAAR,KAAmB;AACvDN,MAAAA,KAAK,CAAClB,SAAN,GAAkB,KAAlB;AACAkB,MAAAA,KAAK,CAAChB,MAAN,GAAesB,MAAM,CAACG,KAAtB;AACD,KAHD;AAID;AAlB6B,CAAD,CAA/B;AAqBA,OAAO,MAAMC,kBAAkB,GAAIV,KAAD,IAChCA,KAAK,CAACW,MAAN,CAAa5B,WADR;AAEP,OAAO,MAAM6B,qBAAqB,GAAIZ,KAAD,IACnCA,KAAK,CAACW,MAAN,CAAa7B,SADR;AAEP,OAAO,MAAM+B,mBAAmB,GAAIb,KAAD,IAAsBA,KAAK,CAACW,MAAN,CAAa3B,MAA/D;AAEP,OAAO,MAAM8B,aAAa,GAAGlB,WAAW,CAACmB,OAAlC","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\n\r\ninterface ILoginresult {\r\n  name: string;\r\n  avatarUrl: string;\r\n  token: string;\r\n}\r\n\r\ninterface ISignInState {\r\n  isLoading: boolean;\r\n  fetchResult: ILoginresult;\r\n  errors: any;\r\n}\r\n\r\nconst initialState: ISignInState = {\r\n  isLoading: false,\r\n  fetchResult: {},\r\n  errors: null,\r\n};\r\n\r\nexport const fetchSignIn = createAsyncThunk<string, {}>(\r\n  \"app/signIn\",\r\n  async (data) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    const response = await fetch(\r\n      \"http://dev.trainee.dex-it.ru/api/Auth/SignIn\",\r\n      requestOptions\r\n    );\r\n    return await response.json();\r\n  }\r\n);\r\n\r\nconst signInSlice = createSlice({\r\n  name: \"signIn\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchSignIn.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchSignIn.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchSignIn.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.errors = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const selectSignInResult = (state: RootState) =>\r\n  state.signIn.fetchResult;\r\nexport const selectSignInIsLoading = (state: RootState) =>\r\n  state.signIn.isLoading;\r\nexport const selectSignInIsError = (state: RootState) => state.signIn.errors;\r\n\r\nexport const signInReducer = signInSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}