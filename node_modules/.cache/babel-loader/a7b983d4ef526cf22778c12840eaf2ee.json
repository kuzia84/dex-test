{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { getTeamsSlice } from \"./getTeamsSlice\";\nimport { getPlayersSlice } from \"./getPlayersSlice\";\nimport { teamsFetchSuffixReducer } from \"./teamsFetchSuffix\";\nimport { playersFetchSuffixSlise } from \"./playersFetchSuffix\";\nimport { getSinglePlayerSlice } from \"./getPlayerSlise\";\nimport { getPlayerPositionsSlice } from \"./getPlayerPositionsSlice\";\nimport { addPlayerSlise } from \"./addPlayerSlise\";\nimport { selectedIdReducer } from \"./selectedIdSlise\";\nimport { sideMenuReducer } from \"./sideMenuSlise\";\nimport { addTeamSlise } from \"./addTeamSlise\";\nimport { getSingleTeamSlice } from \"./getTeamSlise\";\nimport { sidebarStateReducer } from \"./sidebarStateSlise\";\nimport { deleteItemByIdSlise } from \"./deleteItemById\";\nimport { updateTeamByIdReducer } from \"./updateTeamById\";\nexport const store = configureStore({\n  reducer: {\n    getTeams: getTeamsSlice.reducer,\n    getPlayers: getPlayersSlice.reducer,\n    getSinglePlayer: getSinglePlayerSlice.reducer,\n    getSingleTeam: getSingleTeamSlice.reducer,\n    getPlayerPositions: getPlayerPositionsSlice.reducer,\n    teamsFetchSuffix: teamsFetchSuffixReducer,\n    playersFetchSuffix: playersFetchSuffixSlise.reducer,\n    addPlayer: addPlayerSlise.reducer,\n    addTeam: addTeamSlise.reducer,\n    selectedId: selectedIdReducer,\n    sideMenu: sideMenuReducer,\n    sidebarState: sidebarStateReducer,\n    deleteItemById: deleteItemByIdSlise.reducer,\n    updateTeamById: updateTeamByIdReducer\n  } //   middleware: [...getDefaultMiddleware],\n\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["D:/study/dex-test/src/store/store.ts"],"names":["configureStore","useDispatch","getTeamsSlice","getPlayersSlice","teamsFetchSuffixReducer","playersFetchSuffixSlise","getSinglePlayerSlice","getPlayerPositionsSlice","addPlayerSlise","selectedIdReducer","sideMenuReducer","addTeamSlise","getSingleTeamSlice","sidebarStateReducer","deleteItemByIdSlise","updateTeamByIdReducer","store","reducer","getTeams","getPlayers","getSinglePlayer","getSingleTeam","getPlayerPositions","teamsFetchSuffix","playersFetchSuffix","addPlayer","addTeam","selectedId","sideMenu","sidebarState","deleteItemById","updateTeamById","useAppDispatch"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,uBAAT,QAAwC,oBAAxC;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AAEA,OAAO,MAAMC,KAAK,GAAGhB,cAAc,CAAC;AAClCiB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEhB,aAAa,CAACe,OADjB;AAEPE,IAAAA,UAAU,EAAEhB,eAAe,CAACc,OAFrB;AAGPG,IAAAA,eAAe,EAAEd,oBAAoB,CAACW,OAH/B;AAIPI,IAAAA,aAAa,EAAET,kBAAkB,CAACK,OAJ3B;AAKPK,IAAAA,kBAAkB,EAAEf,uBAAuB,CAACU,OALrC;AAMPM,IAAAA,gBAAgB,EAAEnB,uBANX;AAOPoB,IAAAA,kBAAkB,EAAEnB,uBAAuB,CAACY,OAPrC;AAQPQ,IAAAA,SAAS,EAAEjB,cAAc,CAACS,OARnB;AASPS,IAAAA,OAAO,EAAEf,YAAY,CAACM,OATf;AAUPU,IAAAA,UAAU,EAAElB,iBAVL;AAWPmB,IAAAA,QAAQ,EAAElB,eAXH;AAYPmB,IAAAA,YAAY,EAAEhB,mBAZP;AAaPiB,IAAAA,cAAc,EAAEhB,mBAAmB,CAACG,OAb7B;AAcPc,IAAAA,cAAc,EAAEhB;AAdT,GADyB,CAiBlC;;AAjBkC,CAAD,CAA5B;AAqBP,OAAO,MAAMiB,cAAc,GAAG;AAAA;;AAAA,SAAM/B,WAAW,EAAjB;AAAA,CAAvB;;GAAM+B,c;UAAuB/B,W","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getTeamsSlice } from \"./getTeamsSlice\";\r\nimport { getPlayersSlice } from \"./getPlayersSlice\";\r\nimport { teamsFetchSuffixReducer } from \"./teamsFetchSuffix\";\r\nimport { playersFetchSuffixSlise } from \"./playersFetchSuffix\";\r\nimport { getSinglePlayerSlice } from \"./getPlayerSlise\";\r\nimport { getPlayerPositionsSlice } from \"./getPlayerPositionsSlice\";\r\nimport { addPlayerSlise } from \"./addPlayerSlise\";\r\nimport { selectedIdReducer } from \"./selectedIdSlise\";\r\nimport { sideMenuReducer } from \"./sideMenuSlise\";\r\nimport { addTeamSlise } from \"./addTeamSlise\";\r\nimport { getSingleTeamSlice } from \"./getTeamSlise\";\r\nimport { sidebarStateReducer } from \"./sidebarStateSlise\";\r\nimport { deleteItemByIdSlise } from \"./deleteItemById\";\r\nimport { updateTeamByIdReducer } from \"./updateTeamById\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    getTeams: getTeamsSlice.reducer,\r\n    getPlayers: getPlayersSlice.reducer,\r\n    getSinglePlayer: getSinglePlayerSlice.reducer,\r\n    getSingleTeam: getSingleTeamSlice.reducer,\r\n    getPlayerPositions: getPlayerPositionsSlice.reducer,\r\n    teamsFetchSuffix: teamsFetchSuffixReducer,\r\n    playersFetchSuffix: playersFetchSuffixSlise.reducer,\r\n    addPlayer: addPlayerSlise.reducer,\r\n    addTeam: addTeamSlise.reducer,\r\n    selectedId: selectedIdReducer,\r\n    sideMenu: sideMenuReducer,\r\n    sidebarState: sidebarStateReducer,\r\n    deleteItemById: deleteItemByIdSlise.reducer,\r\n    updateTeamById: updateTeamByIdReducer,\r\n  },\r\n  //   middleware: [...getDefaultMiddleware],\r\n});\r\n\r\nexport type AppDispach = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispach>();\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n"]},"metadata":{},"sourceType":"module"}