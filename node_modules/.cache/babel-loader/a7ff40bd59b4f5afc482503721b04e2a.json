{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: true,\n  fetchResult: {},\n  errors: null\n};\nexport const fetchUpdateTeamById = createAsyncThunk(\"team/updateTeamById\", async data => {\n  const myHeaders = new Headers({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  });\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: JSON.stringify(data)\n  };\n  const response = await fetch(\"http://dev.trainee.dex-it.ru/api/Team/Update\", requestOptions);\n  return await response.json();\n});\nconst updateTeamByIdSlise = createSlice({\n  name: \"updateTeamById\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUpdateTeamById.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchUpdateTeamById.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.fetchResult = action.payload;\n    });\n    builder.addCase(fetchUpdateTeamById.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errors = action.error;\n    });\n  }\n});\nexport const SelectUpdateTeamByIdResult = state => state.updateTeamById.fetchResult;\n_c = SelectUpdateTeamByIdResult;\nexport const SelectUpdateTeamByIdIsLoading = state => state.updateTeamById.isLoading;\n_c2 = SelectUpdateTeamByIdIsLoading;\nexport const SelectUpdateTeamByIdError = state => state.updateTeamById.errors;\n_c3 = SelectUpdateTeamByIdError;\nexport const updateTeamByIdReducer = updateTeamByIdSlise.reducer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SelectUpdateTeamByIdResult\");\n$RefreshReg$(_c2, \"SelectUpdateTeamByIdIsLoading\");\n$RefreshReg$(_c3, \"SelectUpdateTeamByIdError\");","map":{"version":3,"sources":["D:/study/dex-test/src/core/updateTeamById.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","fetchResult","errors","fetchUpdateTeamById","data","myHeaders","Headers","Authorization","localStorage","getItem","requestOptions","method","headers","body","JSON","stringify","response","fetch","json","updateTeamByIdSlise","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","SelectUpdateTeamByIdResult","updateTeamById","SelectUpdateTeamByIdIsLoading","SelectUpdateTeamByIdError","updateTeamByIdReducer","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAUA,MAAMC,YAA6B,GAAG;AACpCC,EAAAA,SAAS,EAAE,IADyB;AAEpCC,EAAAA,WAAW,EAAE,EAFuB;AAGpCC,EAAAA,MAAM,EAAE;AAH4B,CAAtC;AAMA,OAAO,MAAMC,mBAAmB,GAAGN,gBAAgB,CACjD,qBADiD,EAEjD,MAAOO,IAAP,IAAgB;AACd,QAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,oBAAgB,kBADY;AAE5BC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF3B,GAAZ,CAAlB;AAIA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAEP,SAFY;AAGrBQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AAHe,GAAvB;AAKA,QAAMY,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8CAD0B,EAE1BP,cAF0B,CAA5B;AAIA,SAAO,MAAMM,QAAQ,CAACE,IAAT,EAAb;AACD,CAjBgD,CAA5C;AAoBP,MAAMC,mBAAmB,GAAGrB,WAAW,CAAC;AACtCsB,EAAAA,IAAI,EAAE,gBADgC;AAEtCrB,EAAAA,YAFsC;AAGtCsB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWxB;AADV,GAH4B;AAMtCyB,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBvB,mBAAmB,CAACwB,OAApC,EAA8CJ,KAAD,IAAW;AACtDA,MAAAA,KAAK,CAACvB,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAyB,IAAAA,OAAO,CAACC,OAAR,CAAgBvB,mBAAmB,CAACyB,SAApC,EAA+C,CAACL,KAAD,EAAQM,MAAR,KAAmB;AAChEN,MAAAA,KAAK,CAACvB,SAAN,GAAkB,KAAlB;AACAuB,MAAAA,KAAK,CAACtB,WAAN,GAAoB4B,MAAM,CAACC,OAA3B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBvB,mBAAmB,CAAC4B,QAApC,EAA8C,CAACR,KAAD,EAAQM,MAAR,KAAmB;AAC/DN,MAAAA,KAAK,CAACvB,SAAN,GAAkB,KAAlB;AACAuB,MAAAA,KAAK,CAACrB,MAAN,GAAe2B,MAAM,CAACG,KAAtB;AACD,KAHD;AAID;AAlBqC,CAAD,CAAvC;AAqBA,OAAO,MAAMC,0BAA0B,GAAIV,KAAD,IACxCA,KAAK,CAACW,cAAN,CAAqBjC,WADhB;KAAMgC,0B;AAEb,OAAO,MAAME,6BAA6B,GAAIZ,KAAD,IAC3CA,KAAK,CAACW,cAAN,CAAqBlC,SADhB;MAAMmC,6B;AAEb,OAAO,MAAMC,yBAAyB,GAAIb,KAAD,IACvCA,KAAK,CAACW,cAAN,CAAqBhC,MADhB;MAAMkC,yB;AAGb,OAAO,MAAMC,qBAAqB,GAAGlB,mBAAmB,CAACmB,OAAlD","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { NewTeamDto } from \"../api/dto/team.g\";\r\nimport { RootState } from \"./redux/store\";\r\n\r\ninterface IUpdateTeamById {\r\n  isLoading: boolean;\r\n  fetchResult: {};\r\n  errors: any;\r\n}\r\n\r\nconst initialState: IUpdateTeamById = {\r\n  isLoading: true,\r\n  fetchResult: {},\r\n  errors: null,\r\n};\r\n\r\nexport const fetchUpdateTeamById = createAsyncThunk<string, NewTeamDto>(\r\n  \"team/updateTeamById\",\r\n  async (data) => {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    });\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: JSON.stringify(data),\r\n    };\r\n    const response = await fetch(\r\n      \"http://dev.trainee.dex-it.ru/api/Team/Update\",\r\n      requestOptions\r\n    );\r\n    return await response.json();\r\n  }\r\n);\r\n\r\nconst updateTeamByIdSlise = createSlice({\r\n  name: \"updateTeamById\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchUpdateTeamById.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchUpdateTeamById.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchUpdateTeamById.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.errors = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const SelectUpdateTeamByIdResult = (state: RootState) =>\r\n  state.updateTeamById.fetchResult;\r\nexport const SelectUpdateTeamByIdIsLoading = (state: RootState) =>\r\n  state.updateTeamById.isLoading;\r\nexport const SelectUpdateTeamByIdError = (state: RootState) =>\r\n  state.updateTeamById.errors;\r\n\r\nexport const updateTeamByIdReducer = updateTeamByIdSlise.reducer;\r\n"]},"metadata":{},"sourceType":"module"}