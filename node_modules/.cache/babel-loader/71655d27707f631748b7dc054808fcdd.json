{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0\n};\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport const selectCount = state => state.counter.value;","map":{"version":3,"sources":["D:/study/dex-test/src/store/slice.ts"],"names":["createSlice","initialState","value","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","selectCount","counter"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAOA,MAAMC,YAA0B,GAAG;AAC/BC,EAAAA,KAAK,EAAE;AADwB,CAAnC;AAIA,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;AACpCI,EAAAA,IAAI,EAAE,SAD8B;AAEpCH,EAAAA,YAFoC;AAGpCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAEC,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACL,KAAN,IAAe,CAAf;AACH,KAHK;AAINM,IAAAA,SAAS,EAAED,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACL,KAAN,IAAe,CAAf;AACH,KANK;AAONO,IAAAA,iBAAiB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAyC;AACxDH,MAAAA,KAAK,CAACL,KAAN,IAAeQ,MAAM,CAACC,OAAtB;AACH;AATK;AAH0B,CAAD,CAAhC;AAgBP,OAAO,MAAM;AAAEL,EAAAA,SAAF;AAAaE,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,IAA6CN,YAAY,CAACS,OAAhE;AACP,OAAO,MAAMC,WAAW,GAAIN,KAAD,IAAsBA,KAAK,CAACO,OAAN,CAAcZ,KAAxD","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport {RootState} from \"./sore\"\r\n\r\ninterface CounterState {\r\n    value: number\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    value: 0\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: \"counter\",\r\n    initialState,\r\n    reducers: {\r\n        increment: state => {\r\n            state.value += 1\r\n        },\r\n        decrement: state => {\r\n            state.value -= 1\r\n        },\r\n        incrementByAmount: (state, action:PayloadAction<number>) => {\r\n            state.value += action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const { increment, decrement, incrementByAmount} = counterSlice.actions\r\nexport const selectCount = (state: RootState) => state.counter.value"]},"metadata":{},"sourceType":"module"}