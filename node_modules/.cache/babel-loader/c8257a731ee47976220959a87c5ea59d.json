{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\Components\\\\SelectTeams\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { fetchTeamsAsync, selectTeamsData, selectTeamsIsLoading } from \"../../store/getTeamsSlice\";\nimport { setTeamIds } from \"../../store/teamsFetchSuffix\";\nimport s from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectTeams = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchTeamsAsync(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams\"));\n  }, [dispatch]);\n  const teamsRedux = useAppSelector(selectTeamsData);\n  const teamsIsLoading = useAppSelector(selectTeamsIsLoading);\n  const teams = teamsRedux.data;\n  let teamSelectOptions = [];\n\n  const customTheme = theme => {\n    return { ...theme,\n      colors: { ...theme.colors,\n        primary25: \"#FF768E\",\n        primary: \"#C60E2E\"\n      }\n    };\n  };\n\n  const colourStyles = {\n    multiValue: styles => {\n      return { ...styles,\n        backgroundColor: \"#E4163A\",\n        borderRadius: \"4px\"\n      };\n    },\n    multiValueLabel: styles => ({ ...styles,\n      color: \"#fff\",\n      fontSize: \"14px\",\n      lineHeight: \"19px\",\n      paddingLeft: \"4px\"\n    }),\n    multiValueRemove: styles => ({ ...styles,\n      color: \"#fff\",\n      \":hover\": {\n        backgroundColor: \"#E4163A\",\n        color: \"#fff\",\n        cursor: \"pointer\"\n      }\n    })\n  };\n  const animatedComponents = makeAnimated();\n\n  if (teamsIsLoading === false) {\n    teamSelectOptions = teams.map(item => ({\n      value: item.id,\n      label: item.name\n    }));\n  }\n\n  console.log(\"teamSelectOptions: \", teamSelectOptions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.reactSelectContainer,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      closeMenuOnSelect: false,\n      components: animatedComponents,\n      isMulti: true,\n      classNamePrefix: \"select-teams\",\n      theme: customTheme,\n      options: teamSelectOptions,\n      styles: colourStyles,\n      onChange: data => {\n        const newArr = data.map(item => item.value);\n        const newRequest = \"&TeamIds=\" + newArr.join(\"&TeamIds=\");\n        dispatch(setTeamIds(newRequest));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectTeams, \"s6j3rPsxNLXLbVgl5X9+uj5Ni3I=\", false, function () {\n  return [useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = SelectTeams;\nexport default SelectTeams;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectTeams\");","map":{"version":3,"sources":["D:/study/dex-test/src/Components/SelectTeams/index.tsx"],"names":["React","useEffect","Select","makeAnimated","useAppDispatch","useAppSelector","fetchTeamsAsync","selectTeamsData","selectTeamsIsLoading","setTeamIds","s","SelectTeams","dispatch","teamsRedux","teamsIsLoading","teams","data","teamSelectOptions","customTheme","theme","colors","primary25","primary","colourStyles","multiValue","styles","backgroundColor","borderRadius","multiValueLabel","color","fontSize","lineHeight","paddingLeft","multiValueRemove","cursor","animatedComponents","map","item","value","id","label","name","console","log","reactSelectContainer","newArr","newRequest","join"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport {\r\n  fetchTeamsAsync,\r\n  selectTeamsData,\r\n  selectTeamsIsLoading,\r\n} from \"../../store/getTeamsSlice\";\r\nimport { setTeamIds } from \"../../store/teamsFetchSuffix\";\r\nimport { ITeamSelectOptions } from \"../../Interfaces\";\r\n\r\nimport s from \"./style.module.css\";\r\n\r\nconst SelectTeams: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchTeamsAsync(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams\"));\r\n  }, [dispatch]);\r\n  const teamsRedux = useAppSelector(selectTeamsData);\r\n  const teamsIsLoading = useAppSelector(selectTeamsIsLoading);\r\n  const teams = teamsRedux.data;\r\n  let teamSelectOptions: ITeamSelectOptions[] = [];\r\n  const customTheme = (theme: any) => {\r\n    return {\r\n      ...theme,\r\n      colors: {\r\n        ...theme.colors,\r\n        primary25: \"#FF768E\",\r\n        primary: \"#C60E2E\",\r\n      },\r\n    };\r\n  };\r\n  const colourStyles = {\r\n    multiValue: (styles: any) => {\r\n      return {\r\n        ...styles,\r\n        backgroundColor: \"#E4163A\",\r\n        borderRadius: \"4px\",\r\n      };\r\n    },\r\n    multiValueLabel: (styles: any) => ({\r\n      ...styles,\r\n      color: \"#fff\",\r\n      fontSize: \"14px\",\r\n      lineHeight: \"19px\",\r\n      paddingLeft: \"4px\",\r\n    }),\r\n    multiValueRemove: (styles: any) => ({\r\n      ...styles,\r\n      color: \"#fff\",\r\n      \":hover\": {\r\n        backgroundColor: \"#E4163A\",\r\n        color: \"#fff\",\r\n        cursor: \"pointer\",\r\n      },\r\n    }),\r\n  };\r\n\r\n  const animatedComponents = makeAnimated();\r\n  if (teamsIsLoading === false) {\r\n    teamSelectOptions = teams.map((item) => ({\r\n      value: item.id,\r\n      label: item.name,\r\n    }));\r\n  }\r\n  console.log(\"teamSelectOptions: \", teamSelectOptions);\r\n  return (\r\n    <div className={s.reactSelectContainer}>\r\n      <Select\r\n        closeMenuOnSelect={false}\r\n        components={animatedComponents}\r\n        isMulti\r\n        classNamePrefix=\"select-teams\"\r\n        theme={customTheme}\r\n        options={teamSelectOptions}\r\n        styles={colourStyles}\r\n        onChange={(data: any) => {\r\n          const newArr = data.map((item: ITeamSelectOptions) => item.value);\r\n          const newRequest = \"&TeamIds=\" + newArr.join(\"&TeamIds=\");\r\n          dispatch(setTeamIds(newRequest));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectTeams;\r\n"]},"metadata":{},"sourceType":"module"}