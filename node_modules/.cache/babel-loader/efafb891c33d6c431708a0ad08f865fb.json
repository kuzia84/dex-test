{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAddPlayer } from \"./playerThunk\";\nimport { fetchPlayerPositionsAsync } from \"./playerThunk\";\nconst addInitialState = {\n  isLoading: true,\n  fetchResult: {},\n  errors: null\n};\nconst addPlayerSlise = createSlice({\n  name: \"addPlayer\",\n  initialState: addInitialState,\n  reducers: {\n    reset: state => addInitialState\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAddPlayer.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchAddPlayer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.fetchResult = action.payload;\n    });\n    builder.addCase(fetchAddPlayer.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errors = action.error;\n    });\n  }\n});\nexport const addPlayerReducer = addPlayerSlise.reducer;\nconst getPositionsInitialState = {\n  isLoading: true,\n  fetchResult: [],\n  error: null\n};\nconst getPlayerPositionsSlice = createSlice({\n  name: \"getPlayerPositions\",\n  initialState: getPositionsInitialState,\n  reducers: {\n    reset: state => getPositionsInitialState\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPlayerPositionsAsync.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchPlayerPositionsAsync.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.fetchResult = action.payload;\n    });\n    builder.addCase(fetchPlayerPositionsAsync.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error;\n    });\n  }\n});\nexport const getPlayerPositionsReducer = getPlayerPositionsSlice.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/modules/player/playerSlice.ts"],"names":["createSlice","fetchAddPlayer","fetchPlayerPositionsAsync","addInitialState","isLoading","fetchResult","errors","addPlayerSlise","name","initialState","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","addPlayerReducer","reducer","getPositionsInitialState","getPlayerPositionsSlice","getPlayerPositionsReducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAKA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,yBAAT,QAA0C,eAA1C;AAEA,MAAMC,eAAkC,GAAG;AACzCC,EAAAA,SAAS,EAAE,IAD8B;AAEzCC,EAAAA,WAAW,EAAE,EAF4B;AAGzCC,EAAAA,MAAM,EAAE;AAHiC,CAA3C;AAMA,MAAMC,cAAc,GAAGP,WAAW,CAAC;AACjCQ,EAAAA,IAAI,EAAE,WAD2B;AAEjCC,EAAAA,YAAY,EAAEN,eAFmB;AAGjCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWT;AADV,GAHuB;AAMjCU,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBd,cAAc,CAACe,OAA/B,EAAyCJ,KAAD,IAAW;AACjDA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAU,IAAAA,OAAO,CAACC,OAAR,CAAgBd,cAAc,CAACgB,SAA/B,EAA0C,CAACL,KAAD,EAAQM,MAAR,KAAmB;AAC3DN,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,WAAN,GAAoBa,MAAM,CAACC,OAA3B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBd,cAAc,CAACmB,QAA/B,EAAyC,CAACR,KAAD,EAAQM,MAAR,KAAmB;AAC1DN,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACN,MAAN,GAAeY,MAAM,CAACG,KAAtB;AACD,KAHD;AAID;AAlBgC,CAAD,CAAlC;AAqBA,OAAO,MAAMC,gBAAgB,GAAGf,cAAc,CAACgB,OAAxC;AAEP,MAAMC,wBAA8C,GAAG;AACrDpB,EAAAA,SAAS,EAAE,IAD0C;AAErDC,EAAAA,WAAW,EAAE,EAFwC;AAGrDgB,EAAAA,KAAK,EAAE;AAH8C,CAAvD;AAMA,MAAMI,uBAAuB,GAAGzB,WAAW,CAAC;AAC1CQ,EAAAA,IAAI,EAAE,oBADoC;AAE1CC,EAAAA,YAAY,EAAEe,wBAF4B;AAG1Cd,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWY;AADV,GAHgC;AAM1CX,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBb,yBAAyB,CAACc,OAA1C,EAAoDJ,KAAD,IAAW;AAC5DA,MAAAA,KAAK,CAACR,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAU,IAAAA,OAAO,CAACC,OAAR,CAAgBb,yBAAyB,CAACe,SAA1C,EAAqD,CAACL,KAAD,EAAQM,MAAR,KAAmB;AACtEN,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACP,WAAN,GAAoBa,MAAM,CAACC,OAA3B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBb,yBAAyB,CAACkB,QAA1C,EAAoD,CAACR,KAAD,EAAQM,MAAR,KAAmB;AACrEN,MAAAA,KAAK,CAACR,SAAN,GAAkB,KAAlB;AACAQ,MAAAA,KAAK,CAACS,KAAN,GAAcH,MAAM,CAACG,KAArB;AACD,KAHD;AAID;AAlByC,CAAD,CAA3C;AAqBA,OAAO,MAAMK,yBAAyB,GAAGD,uBAAuB,CAACF,OAA1D","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  AddNewPlayerState,\r\n  PlayerPositionsState,\r\n} from \"../../api/dto/player.g\";\r\nimport { fetchAddPlayer } from \"./playerThunk\";\r\nimport { fetchPlayerPositionsAsync } from \"./playerThunk\";\r\n\r\nconst addInitialState: AddNewPlayerState = {\r\n  isLoading: true,\r\n  fetchResult: {},\r\n  errors: null,\r\n};\r\n\r\nconst addPlayerSlise = createSlice({\r\n  name: \"addPlayer\",\r\n  initialState: addInitialState,\r\n  reducers: {\r\n    reset: (state) => addInitialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAddPlayer.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchAddPlayer.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchAddPlayer.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.errors = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const addPlayerReducer = addPlayerSlise.reducer;\r\n\r\nconst getPositionsInitialState: PlayerPositionsState = {\r\n  isLoading: true,\r\n  fetchResult: [],\r\n  error: null,\r\n};\r\n\r\nconst getPlayerPositionsSlice = createSlice({\r\n  name: \"getPlayerPositions\",\r\n  initialState: getPositionsInitialState,\r\n  reducers: {\r\n    reset: (state) => getPositionsInitialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPlayerPositionsAsync.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchPlayerPositionsAsync.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchPlayerPositionsAsync.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const getPlayerPositionsReducer = getPlayerPositionsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}