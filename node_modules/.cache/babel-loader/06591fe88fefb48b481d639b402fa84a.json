{"ast":null,"code":"import _regeneratorRuntime from\"D:/study/dex-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/study/dex-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";var initialState={isLoading:false,fetchResult:{data:[],count:0,page:1,size:6},error:null};export var fetchPlayersAsync=createAsyncThunk(\"players/fatchPlayersData\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(request){var myHeaders,requestOptions,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:myHeaders=new Headers({\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(localStorage.getItem(\"token\"))});requestOptions={method:\"GET\",headers:myHeaders};_context.next=4;return fetch(request,requestOptions);case 4:response=_context.sent;_context.next=7;return response.json();case 7:return _context.abrupt(\"return\",_context.sent);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());var getPlayersSlice=createSlice({name:\"getPlayers\",initialState:initialState,reducers:{reset:function reset(state){return initialState;}},extraReducers:function extraReducers(builder){builder.addCase(fetchPlayersAsync.pending,function(state){state.isLoading=true;});builder.addCase(fetchPlayersAsync.fulfilled,function(state,action){state.isLoading=false;state.fetchResult=action.payload;});builder.addCase(fetchPlayersAsync.rejected,function(state,action){state.isLoading=false;state.error=action.error;});}});export var selectPlayersData=function selectPlayersData(state){return state.getPlayers.fetchResult;};export var selectPlayersIsLoading=function selectPlayersIsLoading(state){return state.getPlayers.isLoading;};export var selectPlayersError=function selectPlayersError(state){return state.getPlayers.error;};export var getPlayersReducer=getPlayersSlice.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/store/getPlayersSlice.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","fetchResult","data","count","page","size","error","fetchPlayersAsync","request","myHeaders","Headers","Authorization","localStorage","getItem","requestOptions","method","headers","fetch","response","json","getPlayersSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","selectPlayersData","getPlayers","selectPlayersIsLoading","selectPlayersError","getPlayersReducer","reducer"],"mappings":"6QAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA8C,kBAA9C,CAOA,GAAMC,CAAAA,YAAsC,CAAG,CAC7CC,SAAS,CAAE,KADkC,CAE7CC,WAAW,CAAE,CACXC,IAAI,CAAE,EADK,CAEXC,KAAK,CAAE,CAFI,CAGXC,IAAI,CAAE,CAHK,CAIXC,IAAI,CAAE,CAJK,CAFgC,CAQ7CC,KAAK,CAAE,IARsC,CAA/C,CAWA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGV,gBAAgB,CAC/C,0BAD+C,0FAE/C,iBAAOW,OAAP,wJACQC,SADR,CACoB,GAAIC,CAAAA,OAAJ,CAAY,CAC5B,eAAgB,kBADY,CAE5BC,aAAa,kBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ,CAFe,CAAZ,CADpB,CAKQC,cALR,CAKyB,CACrBC,MAAM,CAAE,KADa,CAErBC,OAAO,CAAEP,SAFY,CALzB,uBASyBQ,CAAAA,KAAK,CAACT,OAAD,CAAUM,cAAV,CAT9B,QASQI,QATR,qCAUgBA,CAAAA,QAAQ,CAACC,IAAT,EAVhB,6GAF+C,+DAA1C,CAgBP,GAAMC,CAAAA,eAAe,CAAGtB,WAAW,CAAC,CAClCuB,IAAI,CAAE,YAD4B,CAElCtB,YAAY,CAAZA,YAFkC,CAGlCuB,QAAQ,CAAE,CACRC,KAAK,CAAE,eAACC,KAAD,QAAWzB,CAAAA,YAAX,EADC,CAHwB,CAMlC0B,aAAa,CAAE,uBAACC,OAAD,CAAa,CAC1BA,OAAO,CAACC,OAAR,CAAgBpB,iBAAiB,CAACqB,OAAlC,CAA2C,SAACJ,KAAD,CAAW,CACpDA,KAAK,CAACxB,SAAN,CAAkB,IAAlB,CACD,CAFD,EAGA0B,OAAO,CAACC,OAAR,CAAgBpB,iBAAiB,CAACsB,SAAlC,CAA6C,SAACL,KAAD,CAAQM,MAAR,CAAmB,CAC9DN,KAAK,CAACxB,SAAN,CAAkB,KAAlB,CACAwB,KAAK,CAACvB,WAAN,CAAoB6B,MAAM,CAACC,OAA3B,CACD,CAHD,EAIAL,OAAO,CAACC,OAAR,CAAgBpB,iBAAiB,CAACyB,QAAlC,CAA4C,SAACR,KAAD,CAAQM,MAAR,CAAmB,CAC7DN,KAAK,CAACxB,SAAN,CAAkB,KAAlB,CACAwB,KAAK,CAAClB,KAAN,CAAcwB,MAAM,CAACxB,KAArB,CACD,CAHD,EAID,CAlBiC,CAAD,CAAnC,CAqBA,MAAO,IAAM2B,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACT,KAAD,QAC/BA,CAAAA,KAAK,CAACU,UAAN,CAAiBjC,WADc,EAA1B,CAEP,MAAO,IAAMkC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACX,KAAD,QACpCA,CAAAA,KAAK,CAACU,UAAN,CAAiBlC,SADmB,EAA/B,CAEP,MAAO,IAAMoC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACZ,KAAD,QAAsBA,CAAAA,KAAK,CAACU,UAAN,CAAiB5B,KAAvC,EAA3B,CAEP,MAAO,IAAM+B,CAAAA,iBAAiB,CAAGjB,eAAe,CAACkB,OAA1C","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n  PlayerDtoPageResult,\r\n  PlayerDtoPageResultState,\r\n} from \"../Interfaces/interfaces\";\r\nimport { RootState } from \"./store\";\r\n\r\nconst initialState: PlayerDtoPageResultState = {\r\n  isLoading: false,\r\n  fetchResult: {\r\n    data: [],\r\n    count: 0,\r\n    page: 1,\r\n    size: 6,\r\n  },\r\n  error: null,\r\n};\r\n\r\nexport const fetchPlayersAsync = createAsyncThunk<any, string>(\r\n  \"players/fatchPlayersData\",\r\n  async (request) => {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    });\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n    };\r\n    const response = await fetch(request, requestOptions);\r\n    return (await response.json()) as PlayerDtoPageResult;\r\n  }\r\n);\r\n\r\nconst getPlayersSlice = createSlice({\r\n  name: \"getPlayers\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPlayersAsync.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchPlayersAsync.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchPlayersAsync.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const selectPlayersData = (state: RootState) =>\r\n  state.getPlayers.fetchResult;\r\nexport const selectPlayersIsLoading = (state: RootState) =>\r\n  state.getPlayers.isLoading;\r\nexport const selectPlayersError = (state: RootState) => state.getPlayers.error;\r\n\r\nexport const getPlayersReducer = getPlayersSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}