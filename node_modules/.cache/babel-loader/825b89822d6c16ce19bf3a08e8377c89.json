{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: false,\n  data: [],\n  count: 0,\n  page: 1,\n  size: 6,\n  error: null\n}; // \"http://dev.trainee.dex-it.ru/api/Team/GetTeams?PageSize=6\";\n\nconst fetchTeamsAsync = createAsyncThunk(\"teams/fatchData\", async pageSige => {\n  const myHeaders = new Headers({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  });\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders\n  };\n  const response = await fetch(`http://dev.trainee.dex-it.ru/api/Team/GetTeams?PageSize=${pageSige}`, requestOptions);\n  return await response.json();\n});\nexport const getTeamsSlice = createSlice({\n  name: \"getTeams\",\n  initialState,\n  reducers: {\n    [fetchTeamsAsync.pending]: state => ({ ...state,\n      isLoading: true\n    }),\n    [fetchTeamsAsync.fulfilled]: (state, action) => ({ ...state,\n      isLoading: false,\n      data: action.payload\n    }),\n    [fetchTeamsAsync.rejected]: (state, action) => ({ ...state,\n      isLoading: false,\n      data: [],\n      error: action.payload\n    })\n  }\n});\nexport const {\n  fetchTeams,\n  fetchTeamsResolve,\n  fetchTeamsReject\n} = getTeamsSlice.actions;\nexport const selectTeamsData = state => state.getTeams.data;\nexport const selectTeamsIsLoading = state => state.getTeams.isLoading;\nexport default getTeamsSlice.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/store/getTeamsSlice.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","data","count","page","size","error","fetchTeamsAsync","pageSige","myHeaders","Headers","Authorization","localStorage","getItem","requestOptions","method","headers","response","fetch","json","getTeamsSlice","name","reducers","pending","state","fulfilled","action","payload","rejected","fetchTeams","fetchTeamsResolve","fetchTeamsReject","actions","selectTeamsData","getTeams","selectTeamsIsLoading","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA6D,kBAA7D;AAqBA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,SAAS,EAAE,KADmB;AAE9BC,EAAAA,IAAI,EAAE,EAFwB;AAG9BC,EAAAA,KAAK,EAAE,CAHuB;AAI9BC,EAAAA,IAAI,EAAE,CAJwB;AAK9BC,EAAAA,IAAI,EAAE,CALwB;AAM9BC,EAAAA,KAAK,EAAE;AANuB,CAAhC,C,CAQA;;AACA,MAAMC,eAAe,GAAGT,gBAAgB,CACtC,iBADsC,EAEtC,MAAOU,QAAP,IAA4B;AAC1B,QAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,oBAAgB,kBADY;AAE5BC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF3B,GAAZ,CAAlB;AAIA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAEP;AAFY,GAAvB;AAIA,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CACzB,2DAA0DV,QAAS,EAD1C,EAE1BM,cAF0B,CAA5B;AAIA,SAAQ,MAAMG,QAAQ,CAACE,IAAT,EAAd;AACD,CAhBqC,CAAxC;AAmBA,OAAO,MAAMC,aAAa,GAAGrB,WAAW,CAAC;AACvCsB,EAAAA,IAAI,EAAE,UADiC;AAEvCrB,EAAAA,YAFuC;AAGvCsB,EAAAA,QAAQ,EAAE;AACR,KAACf,eAAe,CAACgB,OAAjB,GAA4BC,KAAD,KAAY,EACrC,GAAGA,KADkC;AAErCvB,MAAAA,SAAS,EAAE;AAF0B,KAAZ,CADnB;AAKR,KAACM,eAAe,CAACkB,SAAjB,GAA6B,CAACD,KAAD,EAAQE,MAAR,MAAmC,EAC9D,GAAGF,KAD2D;AAE9DvB,MAAAA,SAAS,EAAE,KAFmD;AAG9DC,MAAAA,IAAI,EAAEwB,MAAM,CAACC;AAHiD,KAAnC,CALrB;AAUR,KAACpB,eAAe,CAACqB,QAAjB,GAA4B,CAACJ,KAAD,EAAQE,MAAR,MAAmC,EAC7D,GAAGF,KAD0D;AAE7DvB,MAAAA,SAAS,EAAE,KAFkD;AAG7DC,MAAAA,IAAI,EAAE,EAHuD;AAI7DI,MAAAA,KAAK,EAAEoB,MAAM,CAACC;AAJ+C,KAAnC;AAVpB;AAH6B,CAAD,CAAjC;AAsBP,OAAO,MAAM;AACXE,EAAAA,UADW;AAEXC,EAAAA,iBAFW;AAGXC,EAAAA;AAHW,IAITX,aAAa,CAACY,OAJX;AAKP,OAAO,MAAMC,eAAe,GAAIT,KAAD,IAAsBA,KAAK,CAACU,QAAN,CAAehC,IAA7D;AACP,OAAO,MAAMiC,oBAAoB,GAAIX,KAAD,IAClCA,KAAK,CAACU,QAAN,CAAejC,SADV;AAGP,eAAemB,aAAa,CAACgB,OAA7B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\n\r\ninterface IGetTeams {\r\n  isLoading: boolean;\r\n  data: [\r\n    {\r\n      name: string;\r\n      foundationYear: number;\r\n      division: string;\r\n      conference: string;\r\n      imageUrl: string;\r\n      id: number;\r\n    }?\r\n  ];\r\n  count: number;\r\n  page: number;\r\n  size: number;\r\n  error: any;\r\n}\r\n\r\nconst initialState: IGetTeams = {\r\n  isLoading: false,\r\n  data: [],\r\n  count: 0,\r\n  page: 1,\r\n  size: 6,\r\n  error: null,\r\n};\r\n// \"http://dev.trainee.dex-it.ru/api/Team/GetTeams?PageSize=6\";\r\nconst fetchTeamsAsync = createAsyncThunk(\r\n  \"teams/fatchData\",\r\n  async (pageSige: number) => {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    });\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: myHeaders,\r\n    };\r\n    const response = await fetch(\r\n      `http://dev.trainee.dex-it.ru/api/Team/GetTeams?PageSize=${pageSige}`,\r\n      requestOptions\r\n    );\r\n    return (await response.json()) as IGetTeams;\r\n  }\r\n);\r\n\r\nexport const getTeamsSlice = createSlice({\r\n  name: \"getTeams\",\r\n  initialState,\r\n  reducers: {\r\n    [fetchTeamsAsync.pending]: (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n    [fetchTeamsAsync.fulfilled]: (state, action: PayloadAction) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.payload,\r\n    }),\r\n    [fetchTeamsAsync.rejected]: (state, action: PayloadAction) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: [],\r\n      error: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchTeams,\r\n  fetchTeamsResolve,\r\n  fetchTeamsReject,\r\n} = getTeamsSlice.actions;\r\nexport const selectTeamsData = (state: RootState) => state.getTeams.data;\r\nexport const selectTeamsIsLoading = (state: RootState) =>\r\n  state.getTeams.isLoading;\r\n\r\nexport default getTeamsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}