{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\components\\\\pagination\\\\pagination.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useAppDispatch } from \"../../store/hooks\";\nimport s from \"./style.module.css\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pagination = ({\n  page,\n  loadedCardsNumber,\n  pageSize,\n  pageNumber,\n  setPageNumber\n}) => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  let path = \"\";\n\n  if (page === \"teams\") {\n    path = `/teams?Page=`;\n  }\n\n  if (page === \"players\") {\n    path = `/players?Page=`;\n  }\n\n  const pageCount = Math.ceil(loadedCardsNumber / pageSize);\n  return /*#__PURE__*/_jsxDEV(ReactPaginate, {\n    previousLabel: \"<\",\n    nextLabel: \">\",\n    breakLabel: \"...\",\n    breakClassName: \"break-me\",\n    pageCount: pageCount,\n    marginPagesDisplayed: 1,\n    pageRangeDisplayed: 3,\n    onPageChange: selectedItem => {\n      dispatch(setPageNumber(selectedItem.selected + 1));\n      history.push(path + (selectedItem.selected + 1));\n    },\n    containerClassName: s.pagination // subContainerClassName={\"pages pagination\"}\n    ,\n    activeClassName: s.active,\n    forcePage: pageNumber - 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"OBj9JaX4hQYLGw7Q3Z791P21gao=\", false, function () {\n  return [useAppDispatch, useHistory];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["D:/study/dex-test/src/components/pagination/pagination.tsx"],"names":["React","ReactPaginate","useAppDispatch","s","useHistory","Pagination","page","loadedCardsNumber","pageSize","pageNumber","setPageNumber","dispatch","history","path","pageCount","Math","ceil","selectedItem","selected","push","pagination","active"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAOC,CAAP,MAAc,oBAAd;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,OAAO,MAAMC,UAAiC,GAAG,CAAC;AAChDC,EAAAA,IADgD;AAEhDC,EAAAA,iBAFgD;AAGhDC,EAAAA,QAHgD;AAIhDC,EAAAA,UAJgD;AAKhDC,EAAAA;AALgD,CAAD,KAM3C;AAAA;;AACJ,QAAMC,QAAQ,GAAGT,cAAc,EAA/B;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;AACA,MAAIS,IAAI,GAAG,EAAX;;AACA,MAAIP,IAAI,KAAK,OAAb,EAAsB;AACpBO,IAAAA,IAAI,GAAI,cAAR;AACD;;AACD,MAAIP,IAAI,KAAK,SAAb,EAAwB;AACtBO,IAAAA,IAAI,GAAI,gBAAR;AACD;;AAED,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUT,iBAAiB,GAAGC,QAA9B,CAAlB;AACA,sBACE,QAAC,aAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,SAAS,EAAE,GAFb;AAGE,IAAA,UAAU,EAAE,KAHd;AAIE,IAAA,cAAc,EAAE,UAJlB;AAKE,IAAA,SAAS,EAAEM,SALb;AAME,IAAA,oBAAoB,EAAE,CANxB;AAOE,IAAA,kBAAkB,EAAE,CAPtB;AAQE,IAAA,YAAY,EAAGG,YAAD,IAAwC;AACpDN,MAAAA,QAAQ,CAACD,aAAa,CAACO,YAAY,CAACC,QAAb,GAAwB,CAAzB,CAAd,CAAR;AACAN,MAAAA,OAAO,CAACO,IAAR,CAAaN,IAAI,IAAII,YAAY,CAACC,QAAb,GAAwB,CAA5B,CAAjB;AACD,KAXH;AAYE,IAAA,kBAAkB,EAAEf,CAAC,CAACiB,UAZxB,CAaE;AAbF;AAcE,IAAA,eAAe,EAAEjB,CAAC,CAACkB,MAdrB;AAeE,IAAA,SAAS,EAAEZ,UAAU,GAAG;AAf1B;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArCM;;GAAMJ,U;UAOMH,c,EACDE,U;;;KARLC,U","sourcesContent":["import React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\nimport { IPagination } from \"../../interfaces/interfaces\";\r\nimport s from \"./style.module.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const Pagination: React.FC<IPagination> = ({\r\n  page,\r\n  loadedCardsNumber,\r\n  pageSize,\r\n  pageNumber,\r\n  setPageNumber,\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  let path = \"\";\r\n  if (page === \"teams\") {\r\n    path = `/teams?Page=`;\r\n  }\r\n  if (page === \"players\") {\r\n    path = `/players?Page=`;\r\n  }\r\n\r\n  const pageCount = Math.ceil(loadedCardsNumber / pageSize);\r\n  return (\r\n    <ReactPaginate\r\n      previousLabel={\"<\"}\r\n      nextLabel={\">\"}\r\n      breakLabel={\"...\"}\r\n      breakClassName={\"break-me\"}\r\n      pageCount={pageCount}\r\n      marginPagesDisplayed={1}\r\n      pageRangeDisplayed={3}\r\n      onPageChange={(selectedItem: { selected: number }) => {\r\n        dispatch(setPageNumber(selectedItem.selected + 1));\r\n        history.push(path + (selectedItem.selected + 1));\r\n      }}\r\n      containerClassName={s.pagination}\r\n      // subContainerClassName={\"pages pagination\"}\r\n      activeClassName={s.active}\r\n      forcePage={pageNumber - 1}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}