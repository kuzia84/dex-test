{"ast":null,"code":"export const selectAddPlayerData = state => state.player.addFetchResult;\nexport const selectAddPlayerIsLoading = state => state.player.addIsLoading;\nexport const selectAddPlayerError = state => state.player.addErrors;\nexport const SelectPlayerPositionsData = state => state.getPlayerPositions.fetchResult;\n_c = SelectPlayerPositionsData;\nexport const SelectPlayerPositionsIsLoading = state => state.getPlayerPositions.isLoading;\n_c2 = SelectPlayerPositionsIsLoading;\nexport const SelectPlayerPositionsError = state => state.getPlayerPositions.error;\n_c3 = SelectPlayerPositionsError;\nexport const SelectSinglePlayerData = state => state.getSinglePlayer.fetchResult;\n_c4 = SelectSinglePlayerData;\nexport const SelectSinglePlayerIsLoading = state => state.getSinglePlayer.isLoading;\n_c5 = SelectSinglePlayerIsLoading;\nexport const SelectSinglePlayerError = state => state.getSinglePlayer.error;\n_c6 = SelectSinglePlayerError;\nexport const selectPlayersData = state => state.getPlayers.fetchResult;\nexport const selectPlayersIsLoading = state => state.getPlayers.isLoading;\nexport const selectPlayersError = state => state.getPlayers.error;\nexport const SelectUpdatePlayerByIdResult = state => state.updatePlayerById.fetchResult;\n_c7 = SelectUpdatePlayerByIdResult;\nexport const SelectUpdatePlayerByIdIsLoading = state => state.updatePlayerById.isLoading;\n_c8 = SelectUpdatePlayerByIdIsLoading;\nexport const SelectUpdatePlayerByIdError = state => state.updatePlayerById.errors;\n_c9 = SelectUpdatePlayerByIdError;\nexport const selectPlayersFetchSuffix = state => state.playersFetchSuffix;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"SelectPlayerPositionsData\");\n$RefreshReg$(_c2, \"SelectPlayerPositionsIsLoading\");\n$RefreshReg$(_c3, \"SelectPlayerPositionsError\");\n$RefreshReg$(_c4, \"SelectSinglePlayerData\");\n$RefreshReg$(_c5, \"SelectSinglePlayerIsLoading\");\n$RefreshReg$(_c6, \"SelectSinglePlayerError\");\n$RefreshReg$(_c7, \"SelectUpdatePlayerByIdResult\");\n$RefreshReg$(_c8, \"SelectUpdatePlayerByIdIsLoading\");\n$RefreshReg$(_c9, \"SelectUpdatePlayerByIdError\");","map":{"version":3,"sources":["D:/study/dex-test/src/modules/player/playerSelector.ts"],"names":["selectAddPlayerData","state","player","addFetchResult","selectAddPlayerIsLoading","addIsLoading","selectAddPlayerError","addErrors","SelectPlayerPositionsData","getPlayerPositions","fetchResult","SelectPlayerPositionsIsLoading","isLoading","SelectPlayerPositionsError","error","SelectSinglePlayerData","getSinglePlayer","SelectSinglePlayerIsLoading","SelectSinglePlayerError","selectPlayersData","getPlayers","selectPlayersIsLoading","selectPlayersError","SelectUpdatePlayerByIdResult","updatePlayerById","SelectUpdatePlayerByIdIsLoading","SelectUpdatePlayerByIdError","errors","selectPlayersFetchSuffix","playersFetchSuffix"],"mappings":"AAEA,OAAO,MAAMA,mBAAmB,GAAIC,KAAD,IACjCA,KAAK,CAACC,MAAN,CAAaC,cADR;AAEP,OAAO,MAAMC,wBAAwB,GAAIH,KAAD,IACtCA,KAAK,CAACC,MAAN,CAAaG,YADR;AAEP,OAAO,MAAMC,oBAAoB,GAAIL,KAAD,IAClCA,KAAK,CAACC,MAAN,CAAaK,SADR;AAEP,OAAO,MAAMC,yBAAyB,GAAIP,KAAD,IACvCA,KAAK,CAACQ,kBAAN,CAAyBC,WADpB;KAAMF,yB;AAEb,OAAO,MAAMG,8BAA8B,GAAIV,KAAD,IAC5CA,KAAK,CAACQ,kBAAN,CAAyBG,SADpB;MAAMD,8B;AAEb,OAAO,MAAME,0BAA0B,GAAIZ,KAAD,IACxCA,KAAK,CAACQ,kBAAN,CAAyBK,KADpB;MAAMD,0B;AAEb,OAAO,MAAME,sBAAsB,GAAId,KAAD,IACpCA,KAAK,CAACe,eAAN,CAAsBN,WADjB;MAAMK,sB;AAEb,OAAO,MAAME,2BAA2B,GAAIhB,KAAD,IACzCA,KAAK,CAACe,eAAN,CAAsBJ,SADjB;MAAMK,2B;AAEb,OAAO,MAAMC,uBAAuB,GAAIjB,KAAD,IACrCA,KAAK,CAACe,eAAN,CAAsBF,KADjB;MAAMI,uB;AAEb,OAAO,MAAMC,iBAAiB,GAAIlB,KAAD,IAC/BA,KAAK,CAACmB,UAAN,CAAiBV,WADZ;AAEP,OAAO,MAAMW,sBAAsB,GAAIpB,KAAD,IACpCA,KAAK,CAACmB,UAAN,CAAiBR,SADZ;AAEP,OAAO,MAAMU,kBAAkB,GAAIrB,KAAD,IAAsBA,KAAK,CAACmB,UAAN,CAAiBN,KAAlE;AACP,OAAO,MAAMS,4BAA4B,GAAItB,KAAD,IAC1CA,KAAK,CAACuB,gBAAN,CAAuBd,WADlB;MAAMa,4B;AAEb,OAAO,MAAME,+BAA+B,GAAIxB,KAAD,IAC7CA,KAAK,CAACuB,gBAAN,CAAuBZ,SADlB;MAAMa,+B;AAEb,OAAO,MAAMC,2BAA2B,GAAIzB,KAAD,IACzCA,KAAK,CAACuB,gBAAN,CAAuBG,MADlB;MAAMD,2B;AAEb,OAAO,MAAME,wBAAwB,GAAI3B,KAAD,IACtCA,KAAK,CAAC4B,kBADD","sourcesContent":["import { RootState } from \"../../core/redux/store\";\r\n\r\nexport const selectAddPlayerData = (state: RootState) =>\r\n  state.player.addFetchResult;\r\nexport const selectAddPlayerIsLoading = (state: RootState) =>\r\n  state.player.addIsLoading;\r\nexport const selectAddPlayerError = (state: RootState) =>\r\n  state.player.addErrors;\r\nexport const SelectPlayerPositionsData = (state: RootState) =>\r\n  state.getPlayerPositions.fetchResult;\r\nexport const SelectPlayerPositionsIsLoading = (state: RootState) =>\r\n  state.getPlayerPositions.isLoading;\r\nexport const SelectPlayerPositionsError = (state: RootState) =>\r\n  state.getPlayerPositions.error;\r\nexport const SelectSinglePlayerData = (state: RootState) =>\r\n  state.getSinglePlayer.fetchResult;\r\nexport const SelectSinglePlayerIsLoading = (state: RootState) =>\r\n  state.getSinglePlayer.isLoading;\r\nexport const SelectSinglePlayerError = (state: RootState) =>\r\n  state.getSinglePlayer.error;\r\nexport const selectPlayersData = (state: RootState) =>\r\n  state.getPlayers.fetchResult;\r\nexport const selectPlayersIsLoading = (state: RootState) =>\r\n  state.getPlayers.isLoading;\r\nexport const selectPlayersError = (state: RootState) => state.getPlayers.error;\r\nexport const SelectUpdatePlayerByIdResult = (state: RootState) =>\r\n  state.updatePlayerById.fetchResult;\r\nexport const SelectUpdatePlayerByIdIsLoading = (state: RootState) =>\r\n  state.updatePlayerById.isLoading;\r\nexport const SelectUpdatePlayerByIdError = (state: RootState) =>\r\n  state.updatePlayerById.errors;\r\nexport const selectPlayersFetchSuffix = (state: RootState) =>\r\n  state.playersFetchSuffix;\r\n"]},"metadata":{},"sourceType":"module"}