{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: false,\n  data: [],\n  count: 0,\n  page: 1,\n  size: 6,\n  error: null\n};\nconst fetchTeamsAsync = createAsyncThunk(\"teams/fatchData\", () => {\n  const myHeaders = new Headers({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  });\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders\n  };\n  return fetch(\"http://dev.trainee.dex-it.ru/api/Team/GetTeams?PageSize=6\", requestOptions).then(response => {\n    if (!response.ok) {\n      throw Error;\n    }\n\n    return response.json();\n  });\n});\nexport const getTeamsSlice = createSlice({\n  name: \"getTeams\",\n  initialState,\n  reducers: {\n    fetchTeams: state => ({ ...state,\n      isLoading: true\n    }),\n    fetchTeamsResolve: (state, action) => ({ ...state,\n      isLoading: false,\n      data: action.payload\n    }),\n    fetchTeamsReject: (state, action) => ({ ...state,\n      isLoading: false,\n      data: [],\n      error: action.payload\n    })\n  }\n});\nexport const {\n  fetchTeams,\n  fetchTeamsResolve,\n  fetchTeamsReject\n} = getTeamsSlice.actions;\nexport const selectTeamsData = state => state.getTeams.data;\nexport const selectTeamsIsLoading = state => state.getTeams.isLoading;\nexport default getTeamsSlice.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/store/getTeamsSlice.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","data","count","page","size","error","fetchTeamsAsync","myHeaders","Headers","Authorization","localStorage","getItem","requestOptions","method","headers","fetch","then","response","ok","Error","json","getTeamsSlice","name","reducers","fetchTeams","state","fetchTeamsResolve","action","payload","fetchTeamsReject","actions","selectTeamsData","getTeams","selectTeamsIsLoading","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA6D,kBAA7D;AAqBA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,SAAS,EAAE,KADmB;AAE9BC,EAAAA,IAAI,EAAE,EAFwB;AAG9BC,EAAAA,KAAK,EAAE,CAHuB;AAI9BC,EAAAA,IAAI,EAAE,CAJwB;AAK9BC,EAAAA,IAAI,EAAE,CALwB;AAM9BC,EAAAA,KAAK,EAAE;AANuB,CAAhC;AASA,MAAMC,eAAe,GAAGT,gBAAgB,CAAC,iBAAD,EAAoB,MAAM;AAChE,QAAMU,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,oBAAgB,kBADY;AAE5BC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF3B,GAAZ,CAAlB;AAIA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAEP;AAFY,GAAvB;AAIA,SAAOQ,KAAK,CACV,2DADU,EAEVH,cAFU,CAAL,CAGLI,IAHK,CAGCC,QAAD,IAAc;AACnB,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,YAAMC,KAAN;AACD;;AACD,WAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,GARM,CAAP;AASD,CAlBuC,CAAxC;AAoBA,OAAO,MAAMC,aAAa,GAAGvB,WAAW,CAAC;AACvCwB,EAAAA,IAAI,EAAE,UADiC;AAEvCvB,EAAAA,YAFuC;AAGvCwB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAGC,KAAD,KAAY,EACtB,GAAGA,KADmB;AAEtBzB,MAAAA,SAAS,EAAE;AAFW,KAAZ,CADJ;AAKR0B,IAAAA,iBAAiB,EAAE,CAACD,KAAD,EAAQE,MAAR,MAAmC,EACpD,GAAGF,KADiD;AAEpDzB,MAAAA,SAAS,EAAE,KAFyC;AAGpDC,MAAAA,IAAI,EAAE0B,MAAM,CAACC;AAHuC,KAAnC,CALX;AAURC,IAAAA,gBAAgB,EAAE,CAACJ,KAAD,EAAQE,MAAR,MAAmC,EACnD,GAAGF,KADgD;AAEnDzB,MAAAA,SAAS,EAAE,KAFwC;AAGnDC,MAAAA,IAAI,EAAE,EAH6C;AAInDI,MAAAA,KAAK,EAAEsB,MAAM,CAACC;AAJqC,KAAnC;AAVV;AAH6B,CAAD,CAAjC;AAsBP,OAAO,MAAM;AACXJ,EAAAA,UADW;AAEXE,EAAAA,iBAFW;AAGXG,EAAAA;AAHW,IAITR,aAAa,CAACS,OAJX;AAKP,OAAO,MAAMC,eAAe,GAAIN,KAAD,IAAsBA,KAAK,CAACO,QAAN,CAAe/B,IAA7D;AACP,OAAO,MAAMgC,oBAAoB,GAAIR,KAAD,IAClCA,KAAK,CAACO,QAAN,CAAehC,SADV;AAGP,eAAeqB,aAAa,CAACa,OAA7B","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\n\r\ninterface IGetTeams {\r\n  isLoading: boolean;\r\n  data: [\r\n    {\r\n      name: string;\r\n      foundationYear: number;\r\n      division: string;\r\n      conference: string;\r\n      imageUrl: string;\r\n      id: number;\r\n    }?\r\n  ];\r\n  count: number;\r\n  page: number;\r\n  size: number;\r\n  error: any;\r\n}\r\n\r\nconst initialState: IGetTeams = {\r\n  isLoading: false,\r\n  data: [],\r\n  count: 0,\r\n  page: 1,\r\n  size: 6,\r\n  error: null,\r\n};\r\n\r\nconst fetchTeamsAsync = createAsyncThunk(\"teams/fatchData\", () => {\r\n  const myHeaders = new Headers({\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n  });\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: myHeaders,\r\n  };\r\n  return fetch(\r\n    \"http://dev.trainee.dex-it.ru/api/Team/GetTeams?PageSize=6\",\r\n    requestOptions\r\n  ).then((response) => {\r\n    if (!response.ok) {\r\n      throw Error;\r\n    }\r\n    return response.json();\r\n  });\r\n});\r\n\r\nexport const getTeamsSlice = createSlice({\r\n  name: \"getTeams\",\r\n  initialState,\r\n  reducers: {\r\n    fetchTeams: (state) => ({\r\n      ...state,\r\n      isLoading: true,\r\n    }),\r\n    fetchTeamsResolve: (state, action: PayloadAction) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.payload,\r\n    }),\r\n    fetchTeamsReject: (state, action: PayloadAction) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: [],\r\n      error: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport const {\r\n  fetchTeams,\r\n  fetchTeamsResolve,\r\n  fetchTeamsReject,\r\n} = getTeamsSlice.actions;\r\nexport const selectTeamsData = (state: RootState) => state.getTeams.data;\r\nexport const selectTeamsIsLoading = (state: RootState) =>\r\n  state.getTeams.isLoading;\r\n\r\nexport default getTeamsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}