{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\routes\\\\player\\\\screenPlayer.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { fetchSinglePlayerAsync, SelectSinglePlayerData } from \"../../store/getPlayerSlice\";\nimport { BreadCrumbs } from \"../../components/breadCrumbs/breadCrumbs\";\nimport { ControlButtons } from \"../../components/controlButtons/controlButtons\";\nimport { newSelectedId } from \"../../store/selectedIdSlice\";\nimport { useHistory } from \"react-router\";\nimport { PlayerInfo } from \"../../components/playerInfo/playerInfo\";\nimport { Sidebar } from \"../../components/sidebar/sidebar\";\nimport { Header } from \"../../components/header/header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Player = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const singlePlayer = useAppSelector(SelectSinglePlayerData);\n  const playerId = useAppSelector(newSelectedId);\n\n  if (playerId === 0) {\n    history.push(\"/players\");\n  }\n\n  const request = `http://dev.trainee.dex-it.ru/api/Player/Get?id=${playerId}`;\n  useEffect(() => {\n    dispatch(fetchSinglePlayerAsync(request));\n  }, [request, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item bg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item__top\",\n            children: [/*#__PURE__*/_jsxDEV(BreadCrumbs, {\n              path: \"Players\",\n              name: singlePlayer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ControlButtons, {\n              page: \"players\",\n              itemId: singlePlayer.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item__content\",\n            children: /*#__PURE__*/_jsxDEV(PlayerInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"SlLTO/MJQDA9keTZNtYaZwqj8lU=\", false, function () {\n  return [useAppDispatch, useHistory, useAppSelector, useAppSelector];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["D:/study/dex-test/src/routes/player/screenPlayer.tsx"],"names":["useEffect","useAppDispatch","useAppSelector","fetchSinglePlayerAsync","SelectSinglePlayerData","BreadCrumbs","ControlButtons","newSelectedId","useHistory","PlayerInfo","Sidebar","Header","Player","dispatch","history","singlePlayer","playerId","push","request","name","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,mBAA/C;AACA,SACEC,sBADF,EAEEC,sBAFF,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,0CAA5B;AACA,SAASC,cAAT,QAA+B,gDAA/B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,wCAA3B;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,MAAT,QAAuB,gCAAvB;;AAEA,OAAO,MAAMC,MAAgB,GAAG,MAAM;AAAA;;AACpC,QAAMC,QAAQ,GAAGZ,cAAc,EAA/B;AACA,QAAMa,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,YAAY,GAAGb,cAAc,CAACE,sBAAD,CAAnC;AACA,QAAMY,QAAQ,GAAGd,cAAc,CAACK,aAAD,CAA/B;;AACA,MAAIS,QAAQ,KAAK,CAAjB,EAAoB;AAClBF,IAAAA,OAAO,CAACG,IAAR,CAAa,UAAb;AACD;;AACD,QAAMC,OAAO,GAAI,kDAAiDF,QAAS,EAA3E;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACV,sBAAsB,CAACe,OAAD,CAAvB,CAAR;AACD,GAFQ,EAEN,CAACA,OAAD,EAAUL,QAAV,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE,QAAC,WAAD;AAAa,cAAA,IAAI,EAAC,SAAlB;AAA4B,cAAA,IAAI,EAAEE,YAAY,CAACI;AAA/C;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,cAAD;AAAgB,cAAA,IAAI,EAAC,SAArB;AAA+B,cAAA,MAAM,EAAEJ,YAAY,CAACK;AAApD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjCM;;GAAMR,M;UACMX,c,EACDO,U,EACKN,c,EACJA,c;;;KAJNU,M","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport {\r\n  fetchSinglePlayerAsync,\r\n  SelectSinglePlayerData,\r\n} from \"../../store/getPlayerSlice\";\r\nimport { BreadCrumbs } from \"../../components/breadCrumbs/breadCrumbs\";\r\nimport { ControlButtons } from \"../../components/controlButtons/controlButtons\";\r\nimport { newSelectedId } from \"../../store/selectedIdSlice\";\r\nimport { useHistory } from \"react-router\";\r\nimport { PlayerInfo } from \"../../components/playerInfo/playerInfo\";\r\nimport { Sidebar } from \"../../components/sidebar/sidebar\";\r\nimport { Header } from \"../../components/header/header\";\r\n\r\nexport const Player: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const singlePlayer = useAppSelector(SelectSinglePlayerData);\r\n  const playerId = useAppSelector(newSelectedId);\r\n  if (playerId === 0) {\r\n    history.push(\"/players\");\r\n  }\r\n  const request = `http://dev.trainee.dex-it.ru/api/Player/Get?id=${playerId}`;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSinglePlayerAsync(request));\r\n  }, [request, dispatch]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <Header />\r\n      <Sidebar />\r\n      <div className=\"page-content\">\r\n        <div className=\"item bg\">\r\n          <div className=\"item__wrapper\">\r\n            <div className=\"item__top\">\r\n              <BreadCrumbs path=\"Players\" name={singlePlayer.name} />\r\n              <ControlButtons page=\"players\" itemId={singlePlayer.id} />\r\n            </div>\r\n            <div className=\"item__content\">\r\n              <PlayerInfo />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}