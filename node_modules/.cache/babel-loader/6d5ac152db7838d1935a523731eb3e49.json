{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\components\\\\addNewPlayer\\\\addNewPlayer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { selectAddPlayerError, selectPlayerPositionsData, selectPlayerPositionsIsLoading, selectSinglePlayerData, selectSinglePlayerIsLoading, selectUpdatePlayerByIdError } from \"../../modules/player/playerSelector\";\nimport { useAppDispatch, useAppSelector } from \"../../core/redux/hooks\";\nimport { InputGroup } from \"../inputGroup/iInputGroup\";\nimport { SelectGroup } from \"../selectGroup/selectGroup\";\nimport { fetchAddPlayer, fetchPlayerPositionsAsync, fetchUpdatePlayerById } from \"../../modules/player/playerThunk\";\nimport { playerPostionsRequest } from \"../../api/requests/player\";\nimport { getTeamsRequest } from \"../../api/requests/team\";\nimport { fetchTeamsAsync } from \"../../modules/team/teamThunk\";\nimport { selectTeamsData, selectTeamsIsLoading } from \"../../modules/team/teamSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPlayer = ({\n  playerId\n}) => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(fetchPlayerPositionsAsync(playerPostionsRequest));\n    dispatch(fetchTeamsAsync(getTeamsRequest));\n  }, [dispatch]);\n  const selectedId = playerId ? playerId : 0;\n  const singlePlayerIsLoading = useAppSelector(selectSinglePlayerIsLoading);\n  const singlePlayer = useAppSelector(selectSinglePlayerData);\n  const playerPositionIsLoading = useAppSelector(selectPlayerPositionsIsLoading);\n  const playerPositions = useAppSelector(selectPlayerPositionsData);\n  let playerPosition = [];\n\n  if (playerPositions.length > 2) {\n    playerPosition = playerPositions.map(item => {\n      return {\n        value: item,\n        label: item\n      };\n    });\n  }\n\n  const teamsRedux = useAppSelector(selectTeamsData);\n  const teamsIsLoading = useAppSelector(selectTeamsIsLoading);\n  const teams = teamsRedux.data.map(item => {\n    return {\n      value: item.id,\n      label: item.name\n    };\n  });\n  const addPlayerError = useAppSelector(selectAddPlayerError);\n  const updatePlayerError = useAppSelector(selectUpdatePlayerByIdError);\n  const {\n    control,\n    register,\n    handleSubmit,\n    errors,\n    reset,\n    setValue\n  } = useForm();\n\n  function setTeamDataValues() {\n    setValue(\"playerName\", singlePlayer.name);\n    setValue(\"playerHeight\", singlePlayer.height);\n    setValue(\"playerWeight\", singlePlayer.weight);\n    setValue(\"playerBirthday\", singlePlayer.birthday);\n    setValue(\"playerNumber\", singlePlayer.number);\n  }\n\n  useEffect(() => {\n    if (selectedId !== 0 && singlePlayerIsLoading === false) {\n      setTeamDataValues();\n    }\n  }, [singlePlayerIsLoading, selectedId]);\n\n  const onSubmit = data => {\n    if (selectedId) {\n      const updatePlayerData = {\n        name: data.playerName,\n        number: data.playerNumber,\n        position: data.playerPosition.value,\n        team: data.playerTeam.value,\n        birthday: data.playerBirthday,\n        height: data.playerHeight,\n        weight: data.playerWeight,\n        avatarUrl: data.playerPhoto[0].name,\n        id: selectedId\n      };\n      dispatch(fetchUpdatePlayerById(updatePlayerData));\n\n      if (updatePlayerError) {\n        console.log(\"updatePlayerError: \", updatePlayerError);\n      } else {\n        history.push(\"/players\");\n      }\n    } else {\n      const addPlayerData = {\n        name: data.playerName,\n        number: data.playerNumber,\n        position: data.playerPosition.value,\n        team: data.playerTeam.value,\n        birthday: data.playerBirthday,\n        height: data.playerHeight,\n        weight: data.playerWeight,\n        avatarUrl: data.playerPhoto[0].name\n      };\n      dispatch(fetchAddPlayer(addPlayerData));\n\n      if (addPlayerError) {\n        console.log(\"addPlayerError: \", addPlayerError);\n      } else {\n        history.push(\"/players\");\n      }\n    }\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-add\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-image\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          type: \"file\",\n          inputName: \"playerPhoto\",\n          errorText: \"Select player's image\",\n          register: register,\n          required: true,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-info\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          label: \"Name\",\n          inputName: \"playerName\",\n          errorText: \"Enter player name\",\n          register: register,\n          required: true,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), playerPositionIsLoading ? \"Loading\" : /*#__PURE__*/_jsxDEV(SelectGroup, {\n          label: \"Position\",\n          selectName: \"playerPosition\",\n          errorText: \"This field is required\",\n          errors: errors,\n          register: register,\n          options: playerPosition,\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), teamsIsLoading ? \"Loading\" : /*#__PURE__*/_jsxDEV(SelectGroup, {\n          label: \"Team\",\n          selectName: \"playerTeam\",\n          errorText: \"This field is required\",\n          errors: errors,\n          register: register,\n          options: teams,\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              type: \"number\",\n              label: \"Height (cm)\",\n              inputName: \"playerHeight\",\n              errorText: \"Enter player height\",\n              register: register,\n              required: true,\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              type: \"number\",\n              label: \"Weight (kg)\",\n              inputName: \"playerWeight\",\n              errorText: \"Enter player weight\",\n              register: register,\n              required: true,\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              label: \"Birthday\",\n              type: \"date\",\n              inputName: \"playerBirthday\",\n              errorText: \"Enter player birthday\",\n              register: register,\n              required: true,\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              type: \"number\",\n              label: \"Number\",\n              inputName: \"playerNumber\",\n              errorText: \"Enter player number\",\n              register: register,\n              required: true,\n              errors: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"reset\",\n              value: \"Cancel\",\n              className: \"btn-text\",\n              onClick: () => {\n                history.push(\"/players\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-col\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Save\",\n              className: \"btn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPlayer, \"9FGXbOi8UtveBi4wO9wPo7Jgar4=\", false, function () {\n  return [useAppDispatch, useHistory, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useAppSelector, useForm];\n});\n\n_c = AddPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlayer\");","map":{"version":3,"sources":["D:/study/dex-test/src/components/addNewPlayer/addNewPlayer.tsx"],"names":["React","useEffect","useForm","useHistory","selectAddPlayerError","selectPlayerPositionsData","selectPlayerPositionsIsLoading","selectSinglePlayerData","selectSinglePlayerIsLoading","selectUpdatePlayerByIdError","useAppDispatch","useAppSelector","InputGroup","SelectGroup","fetchAddPlayer","fetchPlayerPositionsAsync","fetchUpdatePlayerById","playerPostionsRequest","getTeamsRequest","fetchTeamsAsync","selectTeamsData","selectTeamsIsLoading","AddPlayer","playerId","dispatch","history","selectedId","singlePlayerIsLoading","singlePlayer","playerPositionIsLoading","playerPositions","playerPosition","length","map","item","value","label","teamsRedux","teamsIsLoading","teams","data","id","name","addPlayerError","updatePlayerError","control","register","handleSubmit","errors","reset","setValue","setTeamDataValues","height","weight","birthday","number","onSubmit","updatePlayerData","playerName","playerNumber","position","team","playerTeam","playerBirthday","playerHeight","playerWeight","avatarUrl","playerPhoto","console","log","push","addPlayerData"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  IPlayerAddData,\r\n  IPlayerAddInputs,\r\n  NewPlayerDto,\r\n} from \"../../api/dto/player.g\";\r\nimport {\r\n  selectAddPlayerError,\r\n  selectPlayerPositionsData,\r\n  selectPlayerPositionsIsLoading,\r\n  selectSinglePlayerData,\r\n  selectSinglePlayerIsLoading,\r\n  selectUpdatePlayerByIdError,\r\n} from \"../../modules/player/playerSelector\";\r\nimport { useAppDispatch, useAppSelector } from \"../../core/redux/hooks\";\r\nimport { InputGroup } from \"../inputGroup/iInputGroup\";\r\nimport { SelectGroup } from \"../selectGroup/selectGroup\";\r\nimport {\r\n  fetchAddPlayer,\r\n  fetchPlayerPositionsAsync,\r\n  fetchUpdatePlayerById,\r\n} from \"../../modules/player/playerThunk\";\r\nimport { playerPostionsRequest } from \"../../api/requests/player\";\r\nimport { getTeamsRequest } from \"../../api/requests/team\";\r\nimport { fetchTeamsAsync } from \"../../modules/team/teamThunk\";\r\nimport cameraImg from \"../../assets/icons/add_a_photo_24px_rounded.svg\";\r\nimport {\r\n  selectTeamsData,\r\n  selectTeamsIsLoading,\r\n} from \"../../modules/team/teamSelector\";\r\n\r\ninterface IPlayerAdd {\r\n  playerId: number;\r\n}\r\n\r\nexport const AddPlayer: React.FC<IPlayerAdd> = ({ playerId }) => {\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(fetchPlayerPositionsAsync(playerPostionsRequest));\r\n    dispatch(fetchTeamsAsync(getTeamsRequest));\r\n  }, [dispatch]);\r\n  const selectedId = playerId ? playerId : 0;\r\n  const singlePlayerIsLoading = useAppSelector(selectSinglePlayerIsLoading);\r\n  const singlePlayer = useAppSelector(selectSinglePlayerData);\r\n  const playerPositionIsLoading = useAppSelector(\r\n    selectPlayerPositionsIsLoading\r\n  );\r\n  const playerPositions = useAppSelector(selectPlayerPositionsData);\r\n  let playerPosition: any = [];\r\n  if (playerPositions.length > 2) {\r\n    playerPosition = playerPositions.map((item: string) => {\r\n      return {\r\n        value: item,\r\n        label: item,\r\n      };\r\n    });\r\n  }\r\n  const teamsRedux = useAppSelector(selectTeamsData);\r\n  const teamsIsLoading = useAppSelector(selectTeamsIsLoading);\r\n  const teams = teamsRedux.data.map((item) => {\r\n    return {\r\n      value: item.id,\r\n      label: item.name,\r\n    };\r\n  });\r\n  const addPlayerError = useAppSelector(selectAddPlayerError);\r\n  const updatePlayerError = useAppSelector(selectUpdatePlayerByIdError);\r\n\r\n  const {\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    reset,\r\n    setValue,\r\n  } = useForm<IPlayerAddInputs>();\r\n\r\n  function setTeamDataValues() {\r\n    setValue(\"playerName\", singlePlayer.name);\r\n    setValue(\"playerHeight\", singlePlayer.height);\r\n    setValue(\"playerWeight\", singlePlayer.weight);\r\n    setValue(\"playerBirthday\", singlePlayer.birthday);\r\n    setValue(\"playerNumber\", singlePlayer.number);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectedId !== 0 && singlePlayerIsLoading === false) {\r\n      setTeamDataValues();\r\n    }\r\n  }, [singlePlayerIsLoading, selectedId]);\r\n\r\n  const onSubmit = (data: IPlayerAddData) => {\r\n    if (selectedId) {\r\n      const updatePlayerData: NewPlayerDto = {\r\n        name: data.playerName,\r\n        number: data.playerNumber,\r\n        position: data.playerPosition.value,\r\n        team: data.playerTeam.value,\r\n        birthday: data.playerBirthday,\r\n        height: data.playerHeight,\r\n        weight: data.playerWeight,\r\n        avatarUrl: data.playerPhoto[0].name,\r\n        id: selectedId,\r\n      };\r\n      dispatch(fetchUpdatePlayerById(updatePlayerData));\r\n      if (updatePlayerError) {\r\n        console.log(\"updatePlayerError: \", updatePlayerError);\r\n      } else {\r\n        history.push(\"/players\");\r\n      }\r\n    } else {\r\n      const addPlayerData: NewPlayerDto = {\r\n        name: data.playerName,\r\n        number: data.playerNumber,\r\n        position: data.playerPosition.value,\r\n        team: data.playerTeam.value,\r\n        birthday: data.playerBirthday,\r\n        height: data.playerHeight,\r\n        weight: data.playerWeight,\r\n        avatarUrl: data.playerPhoto[0].name,\r\n      };\r\n      dispatch(fetchAddPlayer(addPlayerData));\r\n      if (addPlayerError) {\r\n        console.log(\"addPlayerError: \", addPlayerError);\r\n      } else {\r\n        history.push(\"/players\");\r\n      }\r\n    }\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className=\"form-add\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div className=\"form-col\">\r\n        <div className=\"form-image\">\r\n          <InputGroup\r\n            type=\"file\"\r\n            inputName=\"playerPhoto\"\r\n            errorText=\"Select player's image\"\r\n            register={register}\r\n            required\r\n            errors={errors}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-col\">\r\n        <div className=\"form-info\">\r\n          <InputGroup\r\n            label=\"Name\"\r\n            inputName=\"playerName\"\r\n            errorText=\"Enter player name\"\r\n            register={register}\r\n            required\r\n            errors={errors}\r\n          />\r\n          {playerPositionIsLoading ? (\r\n            \"Loading\"\r\n          ) : (\r\n            <SelectGroup\r\n              label=\"Position\"\r\n              selectName=\"playerPosition\"\r\n              errorText=\"This field is required\"\r\n              errors={errors}\r\n              register={register}\r\n              options={playerPosition}\r\n              control={control}\r\n            />\r\n          )}\r\n          {teamsIsLoading ? (\r\n            \"Loading\"\r\n          ) : (\r\n            <SelectGroup\r\n              label=\"Team\"\r\n              selectName=\"playerTeam\"\r\n              errorText=\"This field is required\"\r\n              errors={errors}\r\n              register={register}\r\n              options={teams}\r\n              control={control}\r\n            />\r\n          )}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-col\">\r\n              <InputGroup\r\n                type=\"number\"\r\n                label=\"Height (cm)\"\r\n                inputName=\"playerHeight\"\r\n                errorText=\"Enter player height\"\r\n                register={register}\r\n                required\r\n                errors={errors}\r\n              />\r\n            </div>\r\n            <div className=\"form-col\">\r\n              <InputGroup\r\n                type=\"number\"\r\n                label=\"Weight (kg)\"\r\n                inputName=\"playerWeight\"\r\n                errorText=\"Enter player weight\"\r\n                register={register}\r\n                required\r\n                errors={errors}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-col\">\r\n              <InputGroup\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                inputName=\"playerBirthday\"\r\n                errorText=\"Enter player birthday\"\r\n                register={register}\r\n                required\r\n                errors={errors}\r\n              />\r\n            </div>\r\n            <div className=\"form-col\">\r\n              <InputGroup\r\n                type=\"number\"\r\n                label=\"Number\"\r\n                inputName=\"playerNumber\"\r\n                errorText=\"Enter player number\"\r\n                register={register}\r\n                required\r\n                errors={errors}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row buttons\">\r\n            <div className=\"form-col\">\r\n              <input\r\n                type=\"reset\"\r\n                value=\"Cancel\"\r\n                className=\"btn-text\"\r\n                onClick={() => {\r\n                  history.push(\"/players\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-col\">\r\n              <input type=\"submit\" value=\"Save\" className=\"btn\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}