{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { getTeamsSlice } from \"./getTeamsSlice\";\nimport { getPlayersSlice } from \"./getPlayersSlice\";\nimport { teamsFetchSuffixSlise } from \"./teamsFetchSuffix\";\nimport { playersFetchSuffixSlise } from \"./playersFetchSuffix\";\nimport { getSinglePlayerSlice } from \"./getPlayerSlise\";\nimport { getPlayerPositionsSlice } from \"./getPlayerPositionsSlice\";\nimport { addPlayerSlise } from \"./addPlayerSlise\";\nimport { selectedIdSlice } from \"./selectedIdSlise\";\nimport { sideMenuSlise } from \"./sideMenuSlise\";\nimport { addTeamSlise } from \"./addTeamSlise\";\nimport { getSingleTeamSlice } from \"./getTeamSlise\";\nimport { sidebarStateSlise } from \"./sidebarStateSlise\";\nimport { deleteItemByIdSlise } from \"./deleteItemByIdSlise\";\nexport const store = configureStore({\n  reducer: {\n    getTeams: getTeamsSlice.reducer,\n    getPlayers: getPlayersSlice.reducer,\n    getSinglePlayer: getSinglePlayerSlice.reducer,\n    getSingleTeam: getSingleTeamSlice.reducer,\n    getPlayerPositions: getPlayerPositionsSlice.reducer,\n    teamsFetchSuffix: teamsFetchSuffixSlise.reducer,\n    playersFetchSuffix: playersFetchSuffixSlise.reducer,\n    addPlayer: addPlayerSlise.reducer,\n    addTeam: addTeamSlise.reducer,\n    selectedId: selectedIdSlice.reducer,\n    sideMenu: sideMenuSlise.reducer,\n    sidebarState: sidebarStateSlise.reducer,\n    deleteItemById: deleteItemByIdSlise.reducer\n  } //   middleware: [...getDefaultMiddleware],\n\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["D:/study/dex-test/src/store/store.ts"],"names":["configureStore","useDispatch","getTeamsSlice","getPlayersSlice","teamsFetchSuffixSlise","playersFetchSuffixSlise","getSinglePlayerSlice","getPlayerPositionsSlice","addPlayerSlise","selectedIdSlice","sideMenuSlise","addTeamSlise","getSingleTeamSlice","sidebarStateSlise","deleteItemByIdSlise","store","reducer","getTeams","getPlayers","getSinglePlayer","getSingleTeam","getPlayerPositions","teamsFetchSuffix","playersFetchSuffix","addPlayer","addTeam","selectedId","sideMenu","sidebarState","deleteItemById","useAppDispatch"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,OAAO,MAAMC,KAAK,GAAGf,cAAc,CAAC;AAClCgB,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAEf,aAAa,CAACc,OADjB;AAEPE,IAAAA,UAAU,EAAEf,eAAe,CAACa,OAFrB;AAGPG,IAAAA,eAAe,EAAEb,oBAAoB,CAACU,OAH/B;AAIPI,IAAAA,aAAa,EAAER,kBAAkB,CAACI,OAJ3B;AAKPK,IAAAA,kBAAkB,EAAEd,uBAAuB,CAACS,OALrC;AAMPM,IAAAA,gBAAgB,EAAElB,qBAAqB,CAACY,OANjC;AAOPO,IAAAA,kBAAkB,EAAElB,uBAAuB,CAACW,OAPrC;AAQPQ,IAAAA,SAAS,EAAEhB,cAAc,CAACQ,OARnB;AASPS,IAAAA,OAAO,EAAEd,YAAY,CAACK,OATf;AAUPU,IAAAA,UAAU,EAAEjB,eAAe,CAACO,OAVrB;AAWPW,IAAAA,QAAQ,EAAEjB,aAAa,CAACM,OAXjB;AAYPY,IAAAA,YAAY,EAAEf,iBAAiB,CAACG,OAZzB;AAaPa,IAAAA,cAAc,EAAEf,mBAAmB,CAACE;AAb7B,GADyB,CAgBlC;;AAhBkC,CAAD,CAA5B;AAoBP,OAAO,MAAMc,cAAc,GAAG;AAAA;;AAAA,SAAM7B,WAAW,EAAjB;AAAA,CAAvB;;GAAM6B,c;UAAuB7B,W","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getTeamsSlice } from \"./getTeamsSlice\";\r\nimport { getPlayersSlice } from \"./getPlayersSlice\";\r\nimport { teamsFetchSuffixSlise } from \"./teamsFetchSuffix\";\r\nimport { playersFetchSuffixSlise } from \"./playersFetchSuffix\";\r\nimport { getSinglePlayerSlice } from \"./getPlayerSlise\";\r\nimport { getPlayerPositionsSlice } from \"./getPlayerPositionsSlice\";\r\nimport { addPlayerSlise } from \"./addPlayerSlise\";\r\nimport { selectedIdSlice } from \"./selectedIdSlise\";\r\nimport { sideMenuSlise } from \"./sideMenuSlise\";\r\nimport { addTeamSlise } from \"./addTeamSlise\";\r\nimport { getSingleTeamSlice } from \"./getTeamSlise\";\r\nimport { sidebarStateSlise } from \"./sidebarStateSlise\";\r\nimport { deleteItemByIdSlise } from \"./deleteItemByIdSlise\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    getTeams: getTeamsSlice.reducer,\r\n    getPlayers: getPlayersSlice.reducer,\r\n    getSinglePlayer: getSinglePlayerSlice.reducer,\r\n    getSingleTeam: getSingleTeamSlice.reducer,\r\n    getPlayerPositions: getPlayerPositionsSlice.reducer,\r\n    teamsFetchSuffix: teamsFetchSuffixSlise.reducer,\r\n    playersFetchSuffix: playersFetchSuffixSlise.reducer,\r\n    addPlayer: addPlayerSlise.reducer,\r\n    addTeam: addTeamSlise.reducer,\r\n    selectedId: selectedIdSlice.reducer,\r\n    sideMenu: sideMenuSlise.reducer,\r\n    sidebarState: sidebarStateSlise.reducer,\r\n    deleteItemById: deleteItemByIdSlise.reducer,\r\n  },\r\n  //   middleware: [...getDefaultMiddleware],\r\n});\r\n\r\nexport type AppDispach = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispach>();\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n"]},"metadata":{},"sourceType":"module"}