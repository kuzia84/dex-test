{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: false,\n  fetchResult: {},\n  errors: null\n};\nexport const fetchUpdateItemById = createAsyncThunk(\"app/updateItemById\", async data => {\n  const myHeaders = new Headers({\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n  });\n  const requestOptions = {\n    method: \"PUT\",\n    headers: myHeaders,\n    body: JSON.stringify(data)\n  };\n  const response = await fetch(\"http://dev.trainee.dex-it.ru/api/Team/Update\", requestOptions);\n  return await response.json();\n});\nexport const updateItemByIdSlise = createSlice({\n  name: \"updateItemById\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUpdateItemById.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchUpdateItemById.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.fetchResult = action.payload;\n    });\n    builder.addCase(fetchUpdateItemById.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errors = action.error;\n    });\n  }\n});\nexport const SelectUpdateItemByIdResult = state => state.updateItemById.fetchResult;\n_c = SelectUpdateItemByIdResult;\nexport const SelectUpdateItemByIdIsLoading = state => state.updateItemById.isLoading;\n_c2 = SelectUpdateItemByIdIsLoading;\nexport const SelectUpdateItemByIdError = state => state.updateItemById.errors;\n_c3 = SelectUpdateItemByIdError;\nexport default updateItemByIdSlise.reducer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SelectUpdateItemByIdResult\");\n$RefreshReg$(_c2, \"SelectUpdateItemByIdIsLoading\");\n$RefreshReg$(_c3, \"SelectUpdateItemByIdError\");","map":{"version":3,"sources":["D:/study/dex-test/src/store/updateItemById.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","fetchResult","errors","fetchUpdateItemById","data","myHeaders","Headers","Authorization","localStorage","getItem","requestOptions","method","headers","body","JSON","stringify","response","fetch","json","updateItemByIdSlise","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","SelectUpdateItemByIdResult","updateItemById","SelectUpdateItemByIdIsLoading","SelectUpdateItemByIdError","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AASA,MAAMC,YAA6B,GAAG;AACpCC,EAAAA,SAAS,EAAE,KADyB;AAEpCC,EAAAA,WAAW,EAAE,EAFuB;AAGpCC,EAAAA,MAAM,EAAE;AAH4B,CAAtC;AAMA,OAAO,MAAMC,mBAAmB,GAAGN,gBAAgB,CACjD,oBADiD,EAEjD,MAAOO,IAAP,IAAgB;AACd,QAAMC,SAAS,GAAG,IAAIC,OAAJ,CAAY;AAC5B,oBAAgB,kBADY;AAE5BC,IAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF3B,GAAZ,CAAlB;AAIA,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAEP,SAFY;AAGrBQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AAHe,GAAvB;AAKA,QAAMY,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8CAD0B,EAE1BP,cAF0B,CAA5B;AAIA,SAAO,MAAMM,QAAQ,CAACE,IAAT,EAAb;AACD,CAjBgD,CAA5C;AAoBP,OAAO,MAAMC,mBAAmB,GAAGrB,WAAW,CAAC;AAC7CsB,EAAAA,IAAI,EAAE,gBADuC;AAE7CrB,EAAAA,YAF6C;AAG7CsB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWxB;AADV,GAHmC;AAM7CyB,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBvB,mBAAmB,CAACwB,OAApC,EAA8CJ,KAAD,IAAW;AACtDA,MAAAA,KAAK,CAACvB,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAyB,IAAAA,OAAO,CAACC,OAAR,CAAgBvB,mBAAmB,CAACyB,SAApC,EAA+C,CAACL,KAAD,EAAQM,MAAR,KAAmB;AAChEN,MAAAA,KAAK,CAACvB,SAAN,GAAkB,KAAlB;AACAuB,MAAAA,KAAK,CAACtB,WAAN,GAAoB4B,MAAM,CAACC,OAA3B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBvB,mBAAmB,CAAC4B,QAApC,EAA8C,CAACR,KAAD,EAAQM,MAAR,KAAmB;AAC/DN,MAAAA,KAAK,CAACvB,SAAN,GAAkB,KAAlB;AACAuB,MAAAA,KAAK,CAACrB,MAAN,GAAe2B,MAAM,CAACG,KAAtB;AACD,KAHD;AAID;AAlB4C,CAAD,CAAvC;AAqBP,OAAO,MAAMC,0BAA0B,GAAIV,KAAD,IACxCA,KAAK,CAACW,cAAN,CAAqBjC,WADhB;KAAMgC,0B;AAEb,OAAO,MAAME,6BAA6B,GAAIZ,KAAD,IAC3CA,KAAK,CAACW,cAAN,CAAqBlC,SADhB;MAAMmC,6B;AAEb,OAAO,MAAMC,yBAAyB,GAAIb,KAAD,IACvCA,KAAK,CAACW,cAAN,CAAqBhC,MADhB;MAAMkC,yB;AAGb,eAAejB,mBAAmB,CAACkB,OAAnC","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\n\r\ninterface IUpdateItebById {\r\n  isLoading: boolean;\r\n  fetchResult: {};\r\n  errors: any;\r\n}\r\n\r\nconst initialState: IUpdateItebById = {\r\n  isLoading: false,\r\n  fetchResult: {},\r\n  errors: null,\r\n};\r\n\r\nexport const fetchUpdateItemById = createAsyncThunk<string, {}>(\r\n  \"app/updateItemById\",\r\n  async (data) => {\r\n    const myHeaders = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    });\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: JSON.stringify(data),\r\n    };\r\n    const response = await fetch(\r\n      \"http://dev.trainee.dex-it.ru/api/Team/Update\",\r\n      requestOptions\r\n    );\r\n    return await response.json();\r\n  }\r\n);\r\n\r\nexport const updateItemByIdSlise = createSlice({\r\n  name: \"updateItemById\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchUpdateItemById.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchUpdateItemById.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchUpdateItemById.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.errors = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const SelectUpdateItemByIdResult = (state: RootState) =>\r\n  state.updateItemById.fetchResult;\r\nexport const SelectUpdateItemByIdIsLoading = (state: RootState) =>\r\n  state.updateItemById.isLoading;\r\nexport const SelectUpdateItemByIdError = (state: RootState) =>\r\n  state.updateItemById.errors;\r\n\r\nexport default updateItemByIdSlise.reducer;\r\n"]},"metadata":{},"sourceType":"module"}