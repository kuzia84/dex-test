{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\components\\\\inputGroup\\\\iInputGroup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport s from \"./style.module.css\";\nimport cn from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InputGroup = ({\n  label,\n  type = \"text\",\n  inputName,\n  errorText,\n  register,\n  required,\n  errors,\n  imageUrl\n}) => {\n  _s();\n\n  const [showPwd, setShowPwd] = useState(false);\n  const [inputType, setInputType] = useState(type);\n\n  const handleClick = event => {\n    event.preventDefault();\n    setShowPwd(prevState => !prevState);\n\n    if (inputType === \"password\") {\n      setInputType(\"text\");\n    }\n\n    if (inputType === \"text\") {\n      setInputType(\"password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(s.inputGroup, {\n      [s.showPwd]: showPwd\n    }),\n    children: [type === \"file\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.fileLabel,\n      htmlFor: inputName,\n      style: {\n        backgroundImage: `url(${imageUrl})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.label,\n      htmlFor: inputName,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: s.input,\n      type: inputType,\n      name: inputName,\n      id: inputName,\n      ref: register({\n        required\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), inputName === \"checkPassword\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.showPassword,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : inputName === \"password\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.showPassword,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : \"\", errors[inputName] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.error,\n      children: errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputGroup, \"9a1fNzZt1FpkPlHh/bcnTlHKmc0=\");\n\n_c = InputGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputGroup\");","map":{"version":3,"sources":["D:/study/dex-test/src/components/inputGroup/iInputGroup.tsx"],"names":["React","useState","s","cn","InputGroup","label","type","inputName","errorText","register","required","errors","imageUrl","showPwd","setShowPwd","inputType","setInputType","handleClick","event","preventDefault","prevState","inputGroup","fileLabel","backgroundImage","input","showPassword","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAOC,CAAP,MAAc,oBAAd;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,OAAO,MAAMC,UAAgC,GAAG,CAAC;AAC/CC,EAAAA,KAD+C;AAE/CC,EAAAA,IAAI,GAAG,MAFwC;AAG/CC,EAAAA,SAH+C;AAI/CC,EAAAA,SAJ+C;AAK/CC,EAAAA,QAL+C;AAM/CC,EAAAA,QAN+C;AAO/CC,EAAAA,MAP+C;AAQ/CC,EAAAA;AAR+C,CAAD,KAS1C;AAAA;;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAASK,IAAT,CAA1C;;AACA,QAAMW,WAAW,GAAIC,KAAD,IAAgB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,UAAU,CAAEM,SAAD,IAAe,CAACA,SAAjB,CAAV;;AACA,QAAIL,SAAS,KAAK,UAAlB,EAA8B;AAC5BC,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD;;AACD,QAAID,SAAS,KAAK,MAAlB,EAA0B;AACxBC,MAAAA,YAAY,CAAC,UAAD,CAAZ;AACD;AACF,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEb,EAAE,CAACD,CAAC,CAACmB,UAAH,EAAe;AAAE,OAACnB,CAAC,CAACW,OAAH,GAAaA;AAAf,KAAf,CAAlB;AAAA,eACGP,IAAI,KAAK,MAAT,gBACC;AACE,MAAA,SAAS,EAAEJ,CAAC,CAACoB,SADf;AAEE,MAAA,OAAO,EAAEf,SAFX;AAGE,MAAA,KAAK,EAAE;AACLgB,QAAAA,eAAe,EAAG,OAAMX,QAAS;AAD5B;AAHT;AAAA;AAAA;AAAA;AAAA,YADD,gBASC;AAAO,MAAA,SAAS,EAAEV,CAAC,CAACG,KAApB;AAA2B,MAAA,OAAO,EAAEE,SAApC;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YAVJ,eAcE;AACE,MAAA,SAAS,EAAEH,CAAC,CAACsB,KADf;AAEE,MAAA,IAAI,EAAET,SAFR;AAGE,MAAA,IAAI,EAAER,SAHR;AAIE,MAAA,EAAE,EAAEA,SAJN;AAKE,MAAA,GAAG,EAAEE,QAAQ,CAAC;AAAEC,QAAAA;AAAF,OAAD;AALf;AAAA;AAAA;AAAA;AAAA,YAdF,EAqBGH,SAAS,KAAK,eAAd,gBACC;AAAQ,MAAA,SAAS,EAAEL,CAAC,CAACuB,YAArB;AAAmC,MAAA,OAAO,EAAER;AAA5C;AAAA;AAAA;AAAA;AAAA,YADD,GAEGV,SAAS,KAAK,UAAd,gBACF;AAAQ,MAAA,SAAS,EAAEL,CAAC,CAACuB,YAArB;AAAmC,MAAA,OAAO,EAAER;AAA5C;AAAA;AAAA;AAAA;AAAA,YADE,GAGF,EA1BJ,EA4BGN,MAAM,CAACJ,SAAD,CAAN,iBAAqB;AAAK,MAAA,SAAS,EAAEL,CAAC,CAACwB,KAAlB;AAAA,gBAA0BlB;AAA1B;AAAA;AAAA;AAAA;AAAA,YA5BxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAvDM;;GAAMJ,U;;KAAAA,U","sourcesContent":["import React, { useState } from \"react\";\r\nimport { InputProps } from \"../../api/dto/components.g\";\r\n\r\nimport s from \"./style.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nexport const InputGroup: React.FC<InputProps> = ({\r\n  label,\r\n  type = \"text\",\r\n  inputName,\r\n  errorText,\r\n  register,\r\n  required,\r\n  errors,\r\n  imageUrl,\r\n}) => {\r\n  const [showPwd, setShowPwd] = useState<boolean>(false);\r\n  const [inputType, setInputType] = useState<string>(type);\r\n  const handleClick = (event: any) => {\r\n    event.preventDefault();\r\n    setShowPwd((prevState) => !prevState);\r\n    if (inputType === \"password\") {\r\n      setInputType(\"text\");\r\n    }\r\n    if (inputType === \"text\") {\r\n      setInputType(\"password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cn(s.inputGroup, { [s.showPwd]: showPwd })}>\r\n      {type === \"file\" ? (\r\n        <label\r\n          className={s.fileLabel}\r\n          htmlFor={inputName}\r\n          style={{\r\n            backgroundImage: `url(${imageUrl})`,\r\n          }}\r\n        ></label>\r\n      ) : (\r\n        <label className={s.label} htmlFor={inputName}>\r\n          {label}\r\n        </label>\r\n      )}\r\n      <input\r\n        className={s.input}\r\n        type={inputType}\r\n        name={inputName}\r\n        id={inputName}\r\n        ref={register({ required })}\r\n      />\r\n      {inputName === \"checkPassword\" ? (\r\n        <button className={s.showPassword} onClick={handleClick}></button>\r\n      ) : inputName === \"password\" ? (\r\n        <button className={s.showPassword} onClick={handleClick}></button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {errors[inputName] && <div className={s.error}>{errorText}</div>}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}