{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAddImage } from \"./imageThunk\";\nconst addInitialState = {\n  isLoading: true,\n  fetchResult: string,\n  errors: null\n};\nconst addImageSlice = createSlice({\n  name: \"addImage\",\n  initialState: addInitialState,\n  reducers: {\n    reset: state => addInitialState\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAddImage.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchAddImage.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.fetchResult = action.payload;\n    });\n    builder.addCase(fetchAddImage.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errors = action.error;\n    });\n  }\n});\nexport const addImageReducer = addImageSlice.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/modules/image/imageSlice.ts"],"names":["createSlice","fetchAddImage","addInitialState","isLoading","fetchResult","string","errors","addImageSlice","name","initialState","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","addImageReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,cAA9B;AAQA,MAAMC,eAA0B,GAAG;AACjCC,EAAAA,SAAS,EAAE,IADsB;AAEjCC,EAAAA,WAAW,EAAEC,MAFoB;AAGjCC,EAAAA,MAAM,EAAE;AAHyB,CAAnC;AAMA,MAAMC,aAAa,GAAGP,WAAW,CAAC;AAChCQ,EAAAA,IAAI,EAAE,UAD0B;AAEhCC,EAAAA,YAAY,EAAEP,eAFkB;AAGhCQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWV;AADV,GAHsB;AAMhCW,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBd,aAAa,CAACe,OAA9B,EAAwCJ,KAAD,IAAW;AAChDA,MAAAA,KAAK,CAACT,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAW,IAAAA,OAAO,CAACC,OAAR,CAAgBd,aAAa,CAACgB,SAA9B,EAAyC,CAACL,KAAD,EAAQM,MAAR,KAAmB;AAC1DN,MAAAA,KAAK,CAACT,SAAN,GAAkB,KAAlB;AACAS,MAAAA,KAAK,CAACR,WAAN,GAAoBc,MAAM,CAACC,OAA3B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBd,aAAa,CAACmB,QAA9B,EAAwC,CAACR,KAAD,EAAQM,MAAR,KAAmB;AACzDN,MAAAA,KAAK,CAACT,SAAN,GAAkB,KAAlB;AACAS,MAAAA,KAAK,CAACN,MAAN,GAAeY,MAAM,CAACG,KAAtB;AACD,KAHD;AAID;AAlB+B,CAAD,CAAjC;AAqBA,OAAO,MAAMC,eAAe,GAAGf,aAAa,CAACgB,OAAtC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchAddImage } from \"./imageThunk\";\r\n\r\ninterface IAddImage {\r\n  isLoading: boolean;\r\n  fetchResult: {};\r\n  errors: any;\r\n}\r\n\r\nconst addInitialState: IAddImage = {\r\n  isLoading: true,\r\n  fetchResult: string,\r\n  errors: null,\r\n};\r\n\r\nconst addImageSlice = createSlice({\r\n  name: \"addImage\",\r\n  initialState: addInitialState,\r\n  reducers: {\r\n    reset: (state) => addInitialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAddImage.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchAddImage.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchAddImage.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.errors = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const addImageReducer = addImageSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}