{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAddTeam, fetchSingleTeamAsync } from \"./teamThunk\";\nconst initialState = {\n  addIsLoading: true,\n  addFetchResult: {},\n  addErrors: null,\n  getOneTeamIsLoading: true,\n  getOneTeamFetchResult: {\n    name: \"\",\n    foundationYear: 0,\n    division: \"\",\n    conference: \"\",\n    imageUrl: \"\",\n    id: 0\n  },\n  getOneTeamError: null\n};\nconst teamSlise = createSlice({\n  name: \"team\",\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAddTeam.pending, state => {\n      state.addIsLoading = true;\n    });\n    builder.addCase(fetchAddTeam.fulfilled, (state, action) => {\n      state.addIsLoading = false;\n      state.addFetchResult = action.payload;\n    });\n    builder.addCase(fetchAddTeam.rejected, (state, action) => {\n      state.addIsLoading = false;\n      state.addErrors = action.error;\n    });\n    builder.addCase(fetchSingleTeamAsync.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchSingleTeamAsync.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.fetchResult = action.payload;\n    });\n    builder.addCase(fetchSingleTeamAsync.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.error;\n    });\n  }\n});\nexport const teamReducer = teamSlise.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/modules/team/teamSlice.ts"],"names":["createSlice","fetchAddTeam","fetchSingleTeamAsync","initialState","addIsLoading","addFetchResult","addErrors","getOneTeamIsLoading","getOneTeamFetchResult","name","foundationYear","division","conference","imageUrl","id","getOneTeamError","teamSlise","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","isLoading","fetchResult","teamReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,aAAnD;AAEA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,YAAY,EAAE,IADiB;AAE/BC,EAAAA,cAAc,EAAE,EAFe;AAG/BC,EAAAA,SAAS,EAAE,IAHoB;AAI/BC,EAAAA,mBAAmB,EAAE,IAJU;AAK/BC,EAAAA,qBAAqB,EAAE;AACrBC,IAAAA,IAAI,EAAE,EADe;AAErBC,IAAAA,cAAc,EAAE,CAFK;AAGrBC,IAAAA,QAAQ,EAAE,EAHW;AAIrBC,IAAAA,UAAU,EAAE,EAJS;AAKrBC,IAAAA,QAAQ,EAAE,EALW;AAMrBC,IAAAA,EAAE,EAAE;AANiB,GALQ;AAa/BC,EAAAA,eAAe,EAAE;AAbc,CAAjC;AAgBA,MAAMC,SAAS,GAAGhB,WAAW,CAAC;AAC5BS,EAAAA,IAAI,EAAE,MADsB;AAE5BN,EAAAA,YAF4B;AAG5Bc,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWhB;AADV,GAHkB;AAM5BiB,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,YAAY,CAACsB,OAA7B,EAAuCJ,KAAD,IAAW;AAC/CA,MAAAA,KAAK,CAACf,YAAN,GAAqB,IAArB;AACD,KAFD;AAGAiB,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,YAAY,CAACuB,SAA7B,EAAwC,CAACL,KAAD,EAAQM,MAAR,KAAmB;AACzDN,MAAAA,KAAK,CAACf,YAAN,GAAqB,KAArB;AACAe,MAAAA,KAAK,CAACd,cAAN,GAAuBoB,MAAM,CAACC,OAA9B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBrB,YAAY,CAAC0B,QAA7B,EAAuC,CAACR,KAAD,EAAQM,MAAR,KAAmB;AACxDN,MAAAA,KAAK,CAACf,YAAN,GAAqB,KAArB;AACAe,MAAAA,KAAK,CAACb,SAAN,GAAkBmB,MAAM,CAACG,KAAzB;AACD,KAHD;AAIAP,IAAAA,OAAO,CAACC,OAAR,CAAgBpB,oBAAoB,CAACqB,OAArC,EAA+CJ,KAAD,IAAW;AACvDA,MAAAA,KAAK,CAACU,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAR,IAAAA,OAAO,CAACC,OAAR,CAAgBpB,oBAAoB,CAACsB,SAArC,EAAgD,CAACL,KAAD,EAAQM,MAAR,KAAmB;AACjEN,MAAAA,KAAK,CAACU,SAAN,GAAkB,KAAlB;AACAV,MAAAA,KAAK,CAACW,WAAN,GAAoBL,MAAM,CAACC,OAA3B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBpB,oBAAoB,CAACyB,QAArC,EAA+C,CAACR,KAAD,EAAQM,MAAR,KAAmB;AAChEN,MAAAA,KAAK,CAACU,SAAN,GAAkB,KAAlB;AACAV,MAAAA,KAAK,CAACS,KAAN,GAAcH,MAAM,CAACG,KAArB;AACD,KAHD;AAID;AA7B2B,CAAD,CAA7B;AAgCA,OAAO,MAAMG,WAAW,GAAGf,SAAS,CAACgB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { ITeamState } from \"../../api/dto/team.g\";\r\nimport { fetchAddTeam, fetchSingleTeamAsync } from \"./teamThunk\";\r\n\r\nconst initialState: ITeamState = {\r\n  addIsLoading: true,\r\n  addFetchResult: {},\r\n  addErrors: null,\r\n  getOneTeamIsLoading: true,\r\n  getOneTeamFetchResult: {\r\n    name: \"\",\r\n    foundationYear: 0,\r\n    division: \"\",\r\n    conference: \"\",\r\n    imageUrl: \"\",\r\n    id: 0,\r\n  },\r\n  getOneTeamError: null,\r\n};\r\n\r\nconst teamSlise = createSlice({\r\n  name: \"team\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAddTeam.pending, (state) => {\r\n      state.addIsLoading = true;\r\n    });\r\n    builder.addCase(fetchAddTeam.fulfilled, (state, action) => {\r\n      state.addIsLoading = false;\r\n      state.addFetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchAddTeam.rejected, (state, action) => {\r\n      state.addIsLoading = false;\r\n      state.addErrors = action.error;\r\n    });\r\n    builder.addCase(fetchSingleTeamAsync.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchSingleTeamAsync.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchSingleTeamAsync.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const teamReducer = teamSlise.reducer;\r\n"]},"metadata":{},"sourceType":"module"}