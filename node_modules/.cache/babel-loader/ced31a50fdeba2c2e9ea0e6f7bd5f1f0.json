{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { signInRequest, signUpRequest } from \"../../api/requests/autorization\";\nexport const fetchSignIn = createAsyncThunk(\"app/signIn\", async data => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  };\n  const response = await fetch(signInRequest, requestOptions);\n  const result = await response.json();\n\n  if (result.token) {\n    localStorage.setItem(\"token\", result.token);\n    localStorage.setItem(\"userName\", result.name);\n  }\n\n  return result;\n});\nexport const fetchSignUp = createAsyncThunk(\"app/signUp\", async data => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  };\n  const response = await fetch(signUpRequest, requestOptions);\n  const result = await response.json();\n  console.log(\"result: \", result);\n\n  if (result.token) {\n    localStorage.setItem(\"token\", result.token);\n    localStorage.setItem(\"userName\", result.name);\n  }\n\n  return result;\n});","map":{"version":3,"sources":["D:/study/dex-test/src/modules/autorization/authThunk.ts"],"names":["createAsyncThunk","signInRequest","signUpRequest","fetchSignIn","data","requestOptions","method","headers","body","JSON","stringify","response","fetch","result","json","token","localStorage","setItem","name","fetchSignUp","console","log"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAOA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,iCAA7C;AAEA,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CACzC,YADyC,EAEzC,MAAOI,IAAP,IAAgB;AACd,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFY;AAKrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALe,GAAvB;AAOA,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACX,aAAD,EAAgBI,cAAhB,CAA5B;AACA,QAAMQ,MAAM,GAAI,MAAMF,QAAQ,CAACG,IAAT,EAAtB;;AACA,MAAID,MAAM,CAACE,KAAX,EAAkB;AAChBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACE,KAArC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,MAAM,CAACK,IAAxC;AACD;;AACD,SAAOL,MAAP;AACD,CAjBwC,CAApC;AAoBP,OAAO,MAAMM,WAAW,GAAGnB,gBAAgB,CACzC,YADyC,EAEzC,MAAOI,IAAP,IAAgB;AACd,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFY;AAKrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALe,GAAvB;AAOA,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACV,aAAD,EAAgBG,cAAhB,CAA5B;AACA,QAAMQ,MAAM,GAAI,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,MAAxB;;AACA,MAAIA,MAAM,CAACE,KAAX,EAAkB;AAChBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACE,KAArC;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,MAAM,CAACK,IAAxC;AACD;;AACD,SAAOL,MAAP;AACD,CAlBwC,CAApC","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n  ILoginRequest,\r\n  ILoginResult,\r\n  ISignUpRequest,\r\n  ISignUpResult,\r\n} from \"../../api/dto/autorization.g\";\r\nimport { signInRequest, signUpRequest } from \"../../api/requests/autorization\";\r\n\r\nexport const fetchSignIn = createAsyncThunk<ILoginResult, ILoginRequest>(\r\n  \"app/signIn\",\r\n  async (data) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    const response = await fetch(signInRequest, requestOptions);\r\n    const result = (await response.json()) as ILoginResult;\r\n    if (result.token) {\r\n      localStorage.setItem(\"token\", result.token);\r\n      localStorage.setItem(\"userName\", result.name);\r\n    }\r\n    return result;\r\n  }\r\n);\r\n\r\nexport const fetchSignUp = createAsyncThunk<ISignUpResult, ISignUpRequest>(\r\n  \"app/signUp\",\r\n  async (data) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    };\r\n    const response = await fetch(signUpRequest, requestOptions);\r\n    const result = (await response.json()) as ISignUpResult;\r\n    console.log(\"result: \", result);\r\n    if (result.token) {\r\n      localStorage.setItem(\"token\", result.token);\r\n      localStorage.setItem(\"userName\", result.name);\r\n    }\r\n    return result;\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}