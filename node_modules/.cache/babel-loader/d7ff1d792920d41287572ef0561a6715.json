{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\Routes\\\\PlayersCards\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { fetchPlayersAsync, selectPlayersData } from \"../../store/getPlayersSlice\";\nimport { selectPlayersFetchSuffix, setPageNumber, setPageSize, setSearchText } from \"../../store/playersFetchSuffix\";\nimport AddBtn from \"../../Components/AddBtn\";\nimport Search from \"../../Components/Search\";\nimport PlayerCard from \"../../Components/PlayerCard\";\nimport SelectPageSize from \"../../Components/SelectPageSize\";\nimport Pagination from \"../../Components/Pagination\";\nimport EmptyImg from \"../../img/empty-player.svg\";\nimport EmptyBase from \"../../Components/EmptyBase\";\nimport SelectTeams from \"../../Components/SelectTeams\";\nimport { setId } from \"../../store/selectedIdSlise\";\nimport { useHistory } from \"react-router\";\nimport { setMenuId } from \"../../store/sideMenuSlise\";\nimport { fetchPlayerPositionsAsync } from \"../../store/getPlayerPositionsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PlayersCards = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const playersRedux = useAppSelector(selectPlayersData);\n  const {\n    searchText,\n    pageNumber,\n    pageSize,\n    teamIds\n  } = useAppSelector(selectPlayersFetchSuffix);\n  const players = playersRedux.data;\n  const request = `http://dev.trainee.dex-it.ru/api/Player/GetPlayers?Name=${searchText}${teamIds}&Page=${pageNumber}&PageSize=${pageSize}`;\n  useEffect(() => {\n    dispatch(fetchPlayersAsync(request));\n    dispatch(fetchPlayerPositionsAsync(\"http://dev.trainee.dex-it.ru/api/Player/GetPositions\"));\n    dispatch(setMenuId(2));\n  }, [request, dispatch]);\n  const loadedCardsNumber = playersRedux.count;\n\n  const handleClick = id => {\n    dispatch(setId(id));\n    history.push(\"/player\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        setSearchText: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectTeams, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), players.length ? \"\" : /*#__PURE__*/_jsxDEV(EmptyBase, {\n      imageUrl: EmptyImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 30\n    }, this), players.length && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-wrapper\",\n        children: players.map(({\n          name,\n          avatarUrl,\n          id,\n          number,\n          team\n        }) => {\n          return /*#__PURE__*/_jsxDEV(PlayerCard, {\n            id: id,\n            name: name,\n            number: number,\n            team: team,\n            avatarUrl: avatarUrl,\n            onClick: handleClick\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content__bottom\",\n        children: [/*#__PURE__*/_jsxDEV(Pagination, {\n          loadedCardsNumber: loadedCardsNumber,\n          pageNumber: pageNumber,\n          pageSize: pageSize,\n          setPageNumber: setPageNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectPageSize, {\n          setPageSize: setPageSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(PlayersCards, \"usym8IeZjp0ytEKkAfUC3jyBGnk=\", false, function () {\n  return [useHistory, useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = PlayersCards;\nexport default PlayersCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayersCards\");","map":{"version":3,"sources":["D:/study/dex-test/src/Routes/PlayersCards/index.tsx"],"names":["useEffect","useAppDispatch","useAppSelector","fetchPlayersAsync","selectPlayersData","selectPlayersFetchSuffix","setPageNumber","setPageSize","setSearchText","AddBtn","Search","PlayerCard","SelectPageSize","Pagination","EmptyBase","SelectTeams","setId","useHistory","setMenuId","fetchPlayerPositionsAsync","PlayersCards","history","dispatch","playersRedux","searchText","pageNumber","pageSize","teamIds","players","data","request","loadedCardsNumber","count","handleClick","id","push","length","EmptyImg","map","name","avatarUrl","number","team"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport {\r\n  fetchPlayersAsync,\r\n  selectPlayersData,\r\n} from \"../../store/getPlayersSlice\";\r\nimport {\r\n  selectPlayersFetchSuffix,\r\n  setPageNumber,\r\n  setPageSize,\r\n  setSearchText,\r\n} from \"../../store/playersFetchSuffix\";\r\n\r\nimport AddBtn from \"../../Components/AddBtn\";\r\nimport Search from \"../../Components/Search\";\r\nimport PlayerCard from \"../../Components/PlayerCard\";\r\nimport SelectPageSize from \"../../Components/SelectPageSize\";\r\nimport Pagination from \"../../Components/Pagination\";\r\nimport EmptyImg from \"../../img/empty-player.svg\";\r\nimport EmptyBase from \"../../Components/EmptyBase\";\r\nimport { IFetchSuffix } from \"../../Interfaces\";\r\nimport SelectTeams from \"../../Components/SelectTeams\";\r\nimport { setId } from \"../../store/selectedIdSlise\";\r\nimport { useHistory } from \"react-router\";\r\nimport { setMenuId } from \"../../store/sideMenuSlise\";\r\nimport { fetchPlayerPositionsAsync } from \"../../store/getPlayerPositionsSlice\";\r\n\r\nconst PlayersCards: React.FC = () => {\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const playersRedux = useAppSelector(selectPlayersData);\r\n  const {\r\n    searchText,\r\n    pageNumber,\r\n    pageSize,\r\n    teamIds,\r\n  }: IFetchSuffix = useAppSelector(selectPlayersFetchSuffix);\r\n\r\n  const players = playersRedux.data;\r\n\r\n  const request = `http://dev.trainee.dex-it.ru/api/Player/GetPlayers?Name=${searchText}${teamIds}&Page=${pageNumber}&PageSize=${pageSize}`;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPlayersAsync(request));\r\n    dispatch(\r\n      fetchPlayerPositionsAsync(\r\n        \"http://dev.trainee.dex-it.ru/api/Player/GetPositions\"\r\n      )\r\n    );\r\n    dispatch(setMenuId(2));\r\n  }, [request, dispatch]);\r\n  const loadedCardsNumber = playersRedux.count;\r\n  const handleClick = (id: number) => {\r\n    dispatch(setId(id));\r\n    history.push(\"/player\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-content__top\">\r\n        <Search setSearchText={setSearchText} />\r\n        <SelectTeams />\r\n        <AddBtn />\r\n      </div>\r\n      {players.length ? \"\" : <EmptyBase imageUrl={EmptyImg} />}\r\n      {players.length && (\r\n        <>\r\n          <div className=\"cards-wrapper\">\r\n            {players.map(({ name, avatarUrl, id, number, team }: any) => {\r\n              return (\r\n                <PlayerCard\r\n                  key={id}\r\n                  id={id}\r\n                  name={name}\r\n                  number={number}\r\n                  team={team}\r\n                  avatarUrl={avatarUrl}\r\n                  onClick={handleClick}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"page-content__bottom\">\r\n            <Pagination\r\n              loadedCardsNumber={loadedCardsNumber}\r\n              pageNumber={pageNumber}\r\n              pageSize={pageSize}\r\n              setPageNumber={setPageNumber}\r\n            />\r\n            <SelectPageSize setPageSize={setPageSize} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlayersCards;\r\n"]},"metadata":{},"sourceType":"module"}