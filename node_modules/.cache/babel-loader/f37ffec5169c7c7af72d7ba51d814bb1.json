{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\dex-test\\\\src\\\\Components\\\\SignUpForm\\\\signUpForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport { fetchsignUp, selectSignUpIsLoading, selectSignUpResult } from \"../../store/signUpSlice\";\nimport Checkbox from \"../Checkbox/checkbox\";\nimport InputGroup from \"../InputGroup/iInputGroup\";\nimport s from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpForm = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    if (data.password === data.checkPassword) {\n      const signUpRequest = {\n        login: data.login,\n        userName: data.userName,\n        password: data.password\n      };\n      dispatch(fetchsignUp(signUpRequest));\n      reset();\n    } else {\n      alert(\"Пароли не совпадают\");\n    }\n  };\n\n  const signUpResult = useAppSelector(selectSignUpResult);\n  const signUpIsLoading = useAppSelector(selectSignUpIsLoading);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: s.formTitle,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      label: \"Name\",\n      inputName: \"userName\",\n      errorText: \"Enter name\",\n      register: register,\n      required: true,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      label: \"Login\",\n      inputName: \"login\",\n      errorText: \"Enter login\",\n      register: register,\n      required: true,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      type: \"password\",\n      label: \"Password\",\n      inputName: \"password\",\n      errorText: \"Enter password\",\n      register: register,\n      required: true,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      type: \"password\",\n      label: \"Enter your password again\",\n      inputName: \"checkPassword\",\n      errorText: \"Enter password\",\n      register: register,\n      required: true,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      inputName: \"agreement\",\n      label: \"I accept the agreement\",\n      errorText: \"Accept the agriment\",\n      register: register,\n      required: true,\n      errors: errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.signUpLnk,\n      children: [\"Already a member? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/sign-in\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpForm, \"L3tWmooGojMRiMRvept7fGozjOU=\", false, function () {\n  return [useAppDispatch, useForm, useAppSelector, useAppSelector];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["D:/study/dex-test/src/Components/SignUpForm/signUpForm.tsx"],"names":["useForm","Link","useAppDispatch","useAppSelector","fetchsignUp","selectSignUpIsLoading","selectSignUpResult","Checkbox","InputGroup","s","SignUpForm","dispatch","register","handleSubmit","errors","reset","onSubmit","data","password","checkPassword","signUpRequest","login","userName","alert","signUpResult","signUpIsLoading","formTitle","signUpLnk"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  ISignUpInputs,\r\n  ISignUpRequest,\r\n  ISignUpData,\r\n} from \"../../Interfaces/interfaces\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\r\nimport {\r\n  fetchsignUp,\r\n  selectSignUpIsLoading,\r\n  selectSignUpResult,\r\n} from \"../../store/signUpSlice\";\r\nimport Checkbox from \"../Checkbox/checkbox\";\r\nimport InputGroup from \"../InputGroup/iInputGroup\";\r\nimport s from \"./style.module.css\";\r\n\r\nconst SignUpForm: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { register, handleSubmit, errors, reset } = useForm<ISignUpInputs>();\r\n\r\n  const onSubmit = (data: ISignUpData) => {\r\n    if (data.password === data.checkPassword) {\r\n      const signUpRequest: ISignUpRequest = {\r\n        login: data.login,\r\n        userName: data.userName,\r\n        password: data.password,\r\n      };\r\n\r\n      dispatch(fetchsignUp(signUpRequest));\r\n      reset();\r\n    } else {\r\n      alert(\"Пароли не совпадают\");\r\n    }\r\n  };\r\n\r\n  const signUpResult = useAppSelector(selectSignUpResult);\r\n  const signUpIsLoading = useAppSelector(selectSignUpIsLoading);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h1 className={s.formTitle}>Sign Up</h1>\r\n      <InputGroup\r\n        label=\"Name\"\r\n        inputName=\"userName\"\r\n        errorText=\"Enter name\"\r\n        register={register}\r\n        required\r\n        errors={errors}\r\n      />\r\n      <InputGroup\r\n        label=\"Login\"\r\n        inputName=\"login\"\r\n        errorText=\"Enter login\"\r\n        register={register}\r\n        required\r\n        errors={errors}\r\n      />\r\n      <InputGroup\r\n        type=\"password\"\r\n        label=\"Password\"\r\n        inputName=\"password\"\r\n        errorText=\"Enter password\"\r\n        register={register}\r\n        required\r\n        errors={errors}\r\n      />\r\n      <InputGroup\r\n        type=\"password\"\r\n        label=\"Enter your password again\"\r\n        inputName=\"checkPassword\"\r\n        errorText=\"Enter password\"\r\n        register={register}\r\n        required\r\n        errors={errors}\r\n      />\r\n      <Checkbox\r\n        inputName=\"agreement\"\r\n        label=\"I accept the agreement\"\r\n        errorText=\"Accept the agriment\"\r\n        register={register}\r\n        required\r\n        errors={errors}\r\n      />\r\n      <button className=\"btn\">Sign Up</button>\r\n      <div className={s.signUpLnk}>\r\n        Already a member? <Link to=\"/sign-in\">Sign in</Link>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n"]},"metadata":{},"sourceType":"module"}