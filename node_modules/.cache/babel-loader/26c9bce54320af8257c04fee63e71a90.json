{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={searchText:\"\",pageNumber:1,pageSize:6};var teamsFetchSuffixSlise=createSlice({name:\"teamsFetchSuffix\",initialState:initialState,reducers:{resetSuffix:function resetSuffix(state){return initialState;},setSearchText:function setSearchText(state,action){state.pageNumber=1;state.searchText=action.payload;},setPageNumber:function setPageNumber(state,action){state.pageNumber=action.payload;},setPageSize:function setPageSize(state,action){state.pageNumber=1;state.pageSize=action.payload;}}});var _teamsFetchSuffixSlis=teamsFetchSuffixSlise.actions,resetSuffix=_teamsFetchSuffixSlis.resetSuffix,setSearchText=_teamsFetchSuffixSlis.setSearchText,setPageNumber=_teamsFetchSuffixSlis.setPageNumber,setPageSize=_teamsFetchSuffixSlis.setPageSize;export{resetSuffix,setSearchText,setPageNumber,setPageSize};export var selectTeamsFetchSuffix=function selectTeamsFetchSuffix(state){return state.teamsFetchSuffix;};export var teamsFetchSuffixReducer=teamsFetchSuffixSlise.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/store/teamsFetchSuffix.ts"],"names":["createSlice","initialState","searchText","pageNumber","pageSize","teamsFetchSuffixSlise","name","reducers","resetSuffix","state","setSearchText","action","payload","setPageNumber","setPageSize","actions","selectTeamsFetchSuffix","teamsFetchSuffix","teamsFetchSuffixReducer","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CAIA,GAAMC,CAAAA,YAA0B,CAAG,CACjCC,UAAU,CAAE,EADqB,CAEjCC,UAAU,CAAE,CAFqB,CAGjCC,QAAQ,CAAE,CAHuB,CAAnC,CAMA,GAAMC,CAAAA,qBAAqB,CAAGL,WAAW,CAAC,CACxCM,IAAI,CAAE,kBADkC,CAExCL,YAAY,CAAZA,YAFwC,CAGxCM,QAAQ,CAAE,CACRC,WAAW,CAAE,qBAACC,KAAD,QAAWR,CAAAA,YAAX,EADL,CAERS,aAAa,CAAE,uBAACD,KAAD,CAAQE,MAAR,CAA0C,CACvDF,KAAK,CAACN,UAAN,CAAmB,CAAnB,CACAM,KAAK,CAACP,UAAN,CAAmBS,MAAM,CAACC,OAA1B,CACD,CALO,CAMRC,aAAa,CAAE,uBAACJ,KAAD,CAAQE,MAAR,CAA0C,CACvDF,KAAK,CAACN,UAAN,CAAmBQ,MAAM,CAACC,OAA1B,CACD,CARO,CASRE,WAAW,CAAE,qBAACL,KAAD,CAAQE,MAAR,CAA0C,CACrDF,KAAK,CAACN,UAAN,CAAmB,CAAnB,CACAM,KAAK,CAACL,QAAN,CAAiBO,MAAM,CAACC,OAAxB,CACD,CAZO,CAH8B,CAAD,CAAzC,C,0BAwBIP,qBAAqB,CAACU,O,CAJxBP,W,uBAAAA,W,CACAE,a,uBAAAA,a,CACAG,a,uBAAAA,a,CACAC,W,uBAAAA,W,6DAEF,MAAO,IAAME,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACP,KAAD,QACpCA,CAAAA,KAAK,CAACQ,gBAD8B,EAA/B,CAGP,MAAO,IAAMC,CAAAA,uBAAuB,CAAGb,qBAAqB,CAACc,OAAtD","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { IFetchSuffix } from \"../Interfaces/interfaces\";\r\nimport { RootState } from \"./store\";\r\n\r\nconst initialState: IFetchSuffix = {\r\n  searchText: \"\",\r\n  pageNumber: 1,\r\n  pageSize: 6,\r\n};\r\n\r\nconst teamsFetchSuffixSlise = createSlice({\r\n  name: \"teamsFetchSuffix\",\r\n  initialState,\r\n  reducers: {\r\n    resetSuffix: (state) => initialState,\r\n    setSearchText: (state, action: PayloadAction<string>) => {\r\n      state.pageNumber = 1;\r\n      state.searchText = action.payload;\r\n    },\r\n    setPageNumber: (state, action: PayloadAction<number>) => {\r\n      state.pageNumber = action.payload;\r\n    },\r\n    setPageSize: (state, action: PayloadAction<number>) => {\r\n      state.pageNumber = 1;\r\n      state.pageSize = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  resetSuffix,\r\n  setSearchText,\r\n  setPageNumber,\r\n  setPageSize,\r\n} = teamsFetchSuffixSlise.actions;\r\nexport const selectTeamsFetchSuffix = (state: RootState) =>\r\n  state.teamsFetchSuffix;\r\n\r\nexport const teamsFetchSuffixReducer = teamsFetchSuffixSlise.reducer;\r\n"]},"metadata":{},"sourceType":"module"}