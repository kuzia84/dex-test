{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { getTeamsReducer } from \"./getTeamsSlice\";\nimport { getPlayersReducer } from \"./getPlayersSlice\";\nimport { teamsFetchSuffixReducer } from \"./teamsFetchSuffix\";\nimport { playersFetchSuffixReducer } from \"./playersFetchSuffix\";\nimport { getSinglePlayerReducer } from \"./getPlayerSlise\";\nimport { getPlayerPositionsReducer } from \"./getPlayerPositionsSlice\";\nimport { addPlayerReducer } from \"./addPlayerSlise\";\nimport { selectedIdReducer } from \"./selectedIdSlise\";\nimport { sideMenuReducer } from \"./sideMenuSlise\";\nimport { addTeamReducer } from \"./addTeamSlise\";\nimport { getSingleTeamReducer } from \"./getTeamSlise\";\nimport { sidebarStateReducer } from \"./sidebarStateSlise\";\nimport { deleteItemByIdReducer } from \"./deleteItemById\";\nimport { updateTeamByIdReducer } from \"./updateTeamById\";\nimport { updatePlayerByIdReducer } from \"./updatePlayerById\";\nimport { signInReducer } from \"./signInSlise\";\nexport const store = configureStore({\n  reducer: {\n    signIn: signInReducer,\n    getTeams: getTeamsReducer,\n    getPlayers: getPlayersReducer,\n    getSinglePlayer: getSinglePlayerReducer,\n    getSingleTeam: getSingleTeamReducer,\n    getPlayerPositions: getPlayerPositionsReducer,\n    teamsFetchSuffix: teamsFetchSuffixReducer,\n    playersFetchSuffix: playersFetchSuffixReducer,\n    addPlayer: addPlayerReducer,\n    addTeam: addTeamReducer,\n    selectedId: selectedIdReducer,\n    sideMenu: sideMenuReducer,\n    sidebarState: sidebarStateReducer,\n    deleteItemById: deleteItemByIdReducer,\n    updateTeamById: updateTeamByIdReducer,\n    updatePlayerById: updatePlayerByIdReducer\n  } //   middleware: [...getDefaultMiddleware],\n\n});\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["D:/study/dex-test/src/store/store.ts"],"names":["configureStore","useDispatch","getTeamsReducer","getPlayersReducer","teamsFetchSuffixReducer","playersFetchSuffixReducer","getSinglePlayerReducer","getPlayerPositionsReducer","addPlayerReducer","selectedIdReducer","sideMenuReducer","addTeamReducer","getSingleTeamReducer","sidebarStateReducer","deleteItemByIdReducer","updateTeamByIdReducer","updatePlayerByIdReducer","signInReducer","store","reducer","signIn","getTeams","getPlayers","getSinglePlayer","getSingleTeam","getPlayerPositions","teamsFetchSuffix","playersFetchSuffix","addPlayer","addTeam","selectedId","sideMenu","sidebarState","deleteItemById","updateTeamById","updatePlayerById","useAppDispatch"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,uBAAT,QAAwC,oBAAxC;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,SAASC,sBAAT,QAAuC,kBAAvC;AACA,SAASC,yBAAT,QAA0C,2BAA1C;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,oBAAT,QAAqC,gBAArC;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,uBAAT,QAAwC,oBAAxC;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,OAAO,MAAMC,KAAK,GAAGlB,cAAc,CAAC;AAClCmB,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAEH,aADD;AAEPI,IAAAA,QAAQ,EAAEnB,eAFH;AAGPoB,IAAAA,UAAU,EAAEnB,iBAHL;AAIPoB,IAAAA,eAAe,EAAEjB,sBAJV;AAKPkB,IAAAA,aAAa,EAAEZ,oBALR;AAMPa,IAAAA,kBAAkB,EAAElB,yBANb;AAOPmB,IAAAA,gBAAgB,EAAEtB,uBAPX;AAQPuB,IAAAA,kBAAkB,EAAEtB,yBARb;AASPuB,IAAAA,SAAS,EAAEpB,gBATJ;AAUPqB,IAAAA,OAAO,EAAElB,cAVF;AAWPmB,IAAAA,UAAU,EAAErB,iBAXL;AAYPsB,IAAAA,QAAQ,EAAErB,eAZH;AAaPsB,IAAAA,YAAY,EAAEnB,mBAbP;AAcPoB,IAAAA,cAAc,EAAEnB,qBAdT;AAePoB,IAAAA,cAAc,EAAEnB,qBAfT;AAgBPoB,IAAAA,gBAAgB,EAAEnB;AAhBX,GADyB,CAmBlC;;AAnBkC,CAAD,CAA5B;AAuBP,OAAO,MAAMoB,cAAc,GAAG;AAAA;;AAAA,SAAMnC,WAAW,EAAjB;AAAA,CAAvB;;GAAMmC,c;UAAuBnC,W","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getTeamsReducer } from \"./getTeamsSlice\";\r\nimport { getPlayersReducer } from \"./getPlayersSlice\";\r\nimport { teamsFetchSuffixReducer } from \"./teamsFetchSuffix\";\r\nimport { playersFetchSuffixReducer } from \"./playersFetchSuffix\";\r\nimport { getSinglePlayerReducer } from \"./getPlayerSlise\";\r\nimport { getPlayerPositionsReducer } from \"./getPlayerPositionsSlice\";\r\nimport { addPlayerReducer } from \"./addPlayerSlise\";\r\nimport { selectedIdReducer } from \"./selectedIdSlise\";\r\nimport { sideMenuReducer } from \"./sideMenuSlise\";\r\nimport { addTeamReducer } from \"./addTeamSlise\";\r\nimport { getSingleTeamReducer } from \"./getTeamSlise\";\r\nimport { sidebarStateReducer } from \"./sidebarStateSlise\";\r\nimport { deleteItemByIdReducer } from \"./deleteItemById\";\r\nimport { updateTeamByIdReducer } from \"./updateTeamById\";\r\nimport { updatePlayerByIdReducer } from \"./updatePlayerById\";\r\nimport { signInReducer } from \"./signInSlise\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    signIn: signInReducer,\r\n    getTeams: getTeamsReducer,\r\n    getPlayers: getPlayersReducer,\r\n    getSinglePlayer: getSinglePlayerReducer,\r\n    getSingleTeam: getSingleTeamReducer,\r\n    getPlayerPositions: getPlayerPositionsReducer,\r\n    teamsFetchSuffix: teamsFetchSuffixReducer,\r\n    playersFetchSuffix: playersFetchSuffixReducer,\r\n    addPlayer: addPlayerReducer,\r\n    addTeam: addTeamReducer,\r\n    selectedId: selectedIdReducer,\r\n    sideMenu: sideMenuReducer,\r\n    sidebarState: sidebarStateReducer,\r\n    deleteItemById: deleteItemByIdReducer,\r\n    updateTeamById: updateTeamByIdReducer,\r\n    updatePlayerById: updatePlayerByIdReducer,\r\n  },\r\n  //   middleware: [...getDefaultMiddleware],\r\n});\r\n\r\nexport type AppDispach = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispach>();\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n"]},"metadata":{},"sourceType":"module"}