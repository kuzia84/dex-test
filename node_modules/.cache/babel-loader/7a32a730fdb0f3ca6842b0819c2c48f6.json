{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAddPlayer } from \"./playerThunk\";\nconst addInitialState = {\n  isLoading: true,\n  fetchResult: {},\n  errors: null\n};\nconst addPlayerSlise = createSlice({\n  name: \"addPlayer\",\n  addInitialState,\n  reducers: {\n    reset: state => addInitialState\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAddPlayer.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchAddPlayer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.fetchResult = action.payload;\n    });\n    builder.addCase(fetchAddPlayer.rejected, (state, action) => {\n      state.isLoading = false;\n      state.errors = action.error;\n    });\n  }\n});\nexport const addPlayerReducer = addPlayerSlise.reducer;","map":{"version":3,"sources":["D:/study/dex-test/src/modules/player/playerSlice.ts"],"names":["createSlice","fetchAddPlayer","addInitialState","isLoading","fetchResult","errors","addPlayerSlise","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","addPlayerReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,eAAkC,GAAG;AACzCC,EAAAA,SAAS,EAAE,IAD8B;AAEzCC,EAAAA,WAAW,EAAE,EAF4B;AAGzCC,EAAAA,MAAM,EAAE;AAHiC,CAA3C;AAMA,MAAMC,cAAc,GAAGN,WAAW,CAAC;AACjCO,EAAAA,IAAI,EAAE,WAD2B;AAEjCL,EAAAA,eAFiC;AAGjCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAGC,KAAD,IAAWR;AADV,GAHuB;AAMjCS,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,cAAc,CAACa,OAA/B,EAAyCJ,KAAD,IAAW;AACjDA,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAS,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,cAAc,CAACc,SAA/B,EAA0C,CAACL,KAAD,EAAQM,MAAR,KAAmB;AAC3DN,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,WAAN,GAAoBY,MAAM,CAACC,OAA3B;AACD,KAHD;AAIAL,IAAAA,OAAO,CAACC,OAAR,CAAgBZ,cAAc,CAACiB,QAA/B,EAAyC,CAACR,KAAD,EAAQM,MAAR,KAAmB;AAC1DN,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACL,MAAN,GAAeW,MAAM,CAACG,KAAtB;AACD,KAHD;AAID;AAlBgC,CAAD,CAAlC;AAqBA,OAAO,MAAMC,gBAAgB,GAAGd,cAAc,CAACe,OAAxC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { AddNewPlayerState } from \"../../api/dto/player.g\";\r\nimport { fetchAddPlayer } from \"./playerThunk\";\r\n\r\nconst addInitialState: AddNewPlayerState = {\r\n  isLoading: true,\r\n  fetchResult: {},\r\n  errors: null,\r\n};\r\n\r\nconst addPlayerSlise = createSlice({\r\n  name: \"addPlayer\",\r\n  addInitialState,\r\n  reducers: {\r\n    reset: (state) => addInitialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchAddPlayer.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(fetchAddPlayer.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.fetchResult = action.payload;\r\n    });\r\n    builder.addCase(fetchAddPlayer.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.errors = action.error;\r\n    });\r\n  },\r\n});\r\n\r\nexport const addPlayerReducer = addPlayerSlise.reducer;\r\n"]},"metadata":{},"sourceType":"module"}